{"version":3,"sources":["pages/recourcified.jpeg","pages/title.js","pages/login.js","pages/register.js","pages/notfound.js","pages/navbar.js","pages/branches.js","pages/courses.js","pages/posts.js","pages/userProfile.js","pages/myposts.js","pages/likedposts.js","pages/subscription.js","pages/random.js","pages/home.js","App.js","serviceWorker.js","index.js","pages/homeicon.png"],"names":["module","exports","TitleComponent","title","Helmet","charSet","Login","state","email","password","redirect","authError","isLoggedin","location","handleEmailChange","event","setState","target","value","handlePwdChange","handleSubmit","preventDefault","isLoading","url","configData","SERVER_URL","bodyFormData","FormData","set","axios","post","then","result","localStorage","setItem","data","id","token","role","institute","branch","full_name","status","catch","error","console","log","renderRedirect","to","this","className","onSubmit","placeholder","type","name","onChange","autoFocus","required","htmlFor","disabled","aria-hidden","Component","Register","username","instituteName","instituteId","institutes","branches","branchId","handleNameChange","handleInstitueChange","handleBranchChange","get","headers","Accept","handleBranchChanged","class","for","reequired","selected","map","val","NotFound","Navbar","props","logout","removeItem","getItem","window","scrollTo","setTimeout","reload","menu","href","src","logo","height","width","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","style","aria-current","round","size","marginRight","onClick","AllBatches","instituteHandler","e","history","push","color","paddingTop","Courses","courses","modalShow","showId","createRequested","newCourse","handleClose","handleShow","courseHandler","handleCreatecourse","handleCourseName","Authorization","course","match","params","subscribeHandler","subs","delete","user","marginTop","length","textAlign","email_notification_subscription","variant","alignItems","padding","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Button","Posts","upvote","upvoted","posts","createLink","createDescription","link","description","upvoteHandler","handleCreatepost","handleCreateLinkChange","handleCreateDescriptionChange","float","created_by","fontSize","modified_by","moment","modified_at","format","created_at","is_already_upvoted","upvote_count","userProfile","profile","isEditing","phone","gender","degree","subscription","myprofile","myposts","likedposts","handleDegree","handleFullname","handlePhone","handleGender","editHandler","put","Myposts","editid","editable","postid","editingHandler","deleteHandler","Likedposts","Subscription","random","componentDidMount","handleSubcribe","Home","handleRegister","handleLogin","recourcified","App","forceRefresh","basename","exact","path","component","Branches","UserProfile","LikedPosts","Random","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cc2a7c90.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/recourcified.09ff985f.jpeg\";","import Helmet from \"react-helmet\";\nimport React from \"react\";\n\nconst TitleComponent = ({title}) => {\n    var defaultTitle = '⚛️ app';\n    return (\n        <Helmet>\n            <meta charSet=\"utf-8\" />\n            <title>{title ? title : defaultTitle}</title>\n        </Helmet>\n    );\n};\n\nexport default TitleComponent;\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link, Redirect } from 'react-router-dom'\nimport TitleComponent from './title'\nimport configData from './config.json'\n\nexport default class Login extends Component {\n  state = {\n    email: '',\n    password: '',\n\n    redirect: false,\n    authError: false,\n    isLoggedin: false,\n    location: {}\n  }\n\n  handleEmailChange = event => {\n    this.setState({ email: event.target.value })\n  }\n  handlePwdChange = event => {\n    this.setState({ password: event.target.value })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n\n    this.setState({ isLoading: true })\n    const options = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n    const url = `${configData.SERVER_URL}api/login`\n\n    const email = this.state.email\n    const password = this.state.password\n    let bodyFormData = new FormData()\n    bodyFormData.set('email', email)\n    bodyFormData.set('password', password)\n    axios\n      .post(url, bodyFormData)\n      .then(result => {\n        // console.log(result.data);\n        localStorage.setItem('userid', result.data.id)\n        localStorage.setItem('token', result.data.token)\n        localStorage.setItem('role', result.data.role)\n        // console.log(localStorage.getItem(\"role\"));\n        localStorage.setItem('institute', result.data.institute)\n        localStorage.setItem('branch', result.data.branch)\n        localStorage.setItem('full_name', result.data.full_name)\n        this.setState({ redirect: true, isLoggedin: true })\n        localStorage.setItem('isLoggedIn', true)\n\n        if (result.data.status !== 'fail') {\n          this.setState({ redirect: true, authError: false })\n        } else {\n          this.setState({ redirect: false, authError: true })\n        }\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({ authError: true, isLoading: false })\n      })\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to='/branches' />\n    }\n  }\n\n  render () {\n    const isLoading = this.state.isLoading\n\n    return (\n      <div className='container'>\n        <TitleComponent title='React CRUD Login '></TitleComponent>\n        <div className='card card-login mx-auto mt-5 '>\n          <div className='card-header colour-green'>Login</div>\n\n          <div className='card-body '>\n            <form onSubmit={this.handleSubmit}>\n              <div className='form-group'>\n                <div className='form-label-group'>\n                  <input\n                    className={\n                      'form-control ' +\n                      (this.state.authError ? 'is-invalid' : '')\n                    }\n                    id='inputEmail'\n                    placeholder='Email'\n                    type='text'\n                    name='email'\n                    onChange={this.handleEmailChange}\n                    autoFocus\n                    required\n                  />\n                  <label htmlFor='inputEmail'>Email address</label>\n                  <div className='invalid-feedback'>\n                    Please provide a valid Email.\n                  </div>\n                </div>\n              </div>\n              <div className='form-group'>\n                <div className='form-label-group'>\n                  <input\n                    type='password'\n                    className={\n                      'form-control ' +\n                      (this.state.authError ? 'is-invalid' : '')\n                    }\n                    id='inputPassword'\n                    placeholder='******'\n                    name='password'\n                    onChange={this.handlePwdChange}\n                    required\n                  />\n                  <label htmlFor='inputPassword'>Password</label>\n                  <div className='invalid-feedback'>\n                    Please provide a valid Password.\n                  </div>\n                </div>\n              </div>\n\n              <div className='form-group'>\n                <button\n                  className='btn btn-primary btn-block'\n                  type='submit'\n                  disabled={this.state.isLoading ? true : false}\n                >\n                  Login &nbsp;&nbsp;&nbsp;\n                  {isLoading ? (\n                    <span\n                      className='spinner-border spinner-border-sm'\n                      role='status'\n                      aria-hidden='true'\n                    ></span>\n                  ) : (\n                    <span></span>\n                  )}\n                </button>\n              </div>\n            </form>\n            <div className='text-center'>\n              <Link className='d-block small mt-3' to={'register'}>\n                Register an Account\n              </Link>\n            </div>\n          </div>\n        </div>\n        {this.renderRedirect()}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link, Redirect } from 'react-router-dom'\nimport configData from './config.json'\n\nexport default class Register extends Component {\n  state = {\n    username: '',\n    name: '',\n    email: '',\n    password: '',\n    redirect: false,\n    authError: false,\n    isLoading: false,\n    instituteName: '',\n    instituteId: 0,\n    institutes: [],\n    branches: [],\n    branchId: 0\n  }\n\n  componentDidMount () {\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    }\n    const url = `${configData.SERVER_URL}api/institutes`\n    axios\n      .get(url, { headers })\n      .then(result => {\n        // if (result.data.status !== \"fail\") {\n        //   this.setState({ redirect: true, authError: false });\n        // } else {\n        //   this.setState({ redirect: false, authError: true });\n        // }\n        this.setState({ institutes: result.data })\n\n        // console.log(result.data);\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({ authError: true, isLoading: false })\n      })\n  }\n  //if(localStorage.getItem(\"isLoggedIn\")!=NULL & localStorage.getItem(\"isLoggedIn\")==true)\n\n  handleEmailChange = event => {\n    // console.log(this.state.role);\n    this.setState({ email: event.target.value })\n    this.setState({ username: event.target.value })\n  }\n  handlePwdChange = event => {\n    this.setState({ password: event.target.value })\n  }\n  handleNameChange = event => {\n    this.setState({ name: event.target.value })\n  }\n\n  handleInstitueChange = event => {\n    // console.log();\n    // console.log(event.target.value);\n    // this.setState({ instituteName: event.target.value });\n    this.setState({ instituteId: event.target.value })\n    this.handleBranchChange(event)\n  }\n\n  handleBranchChange = event => {\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    }\n    const url =\n      `${configData.SERVER_URL}api/branches?institute=` + event.target.value\n    axios\n      .get(url, { headers })\n      .then(result => {\n        this.setState({ branches: result.data })\n\n        // console.log(result.data);\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({ authError: true, isLoading: false })\n      })\n    // this.setState({ branch: event.target.value });\n    // console.log(this.state.branch);\n  }\n\n  handleBranchChanged = event => {\n    this.setState({ branchId: event.target.value })\n  }\n  handleSubmit = event => {\n    event.preventDefault()\n    this.setState({ isLoading: true })\n    const url = `${configData.SERVER_URL}api/signup`\n    const email = this.state.email\n    const role = 'student'\n    const password = this.state.password\n    const full_name = this.state.name\n    const username = this.state.username\n    const branch = this.state.branchId\n    const institute = this.state.instituteId\n    let bodyFormData = new FormData()\n    bodyFormData.set('role', role)\n    bodyFormData.set('email', email)\n\n    bodyFormData.set('full_name', full_name)\n    bodyFormData.set('username', username)\n    bodyFormData.set('password', password)\n    bodyFormData.set('branch', branch)\n    bodyFormData.set('institute', institute)\n\n    // console.log(institute)\n    // console.log(branch)\n    axios\n      .post(url, bodyFormData)\n      .then(result => {\n        this.setState({ isLoading: false })\n        if (result.data.status !== 'fail') {\n          this.setState({ redirect: true, authError: false })\n        } else {\n          this.setState({ redirect: false, authError: true })\n        }\n\n        // console.log(result)\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({ authError: true, isLoading: false })\n      })\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to='/login' />\n    }\n  }\n\n  render () {\n    const isLoading = this.state.isLoading\n    return (\n      <div className='container'>\n        <div className='card card-login mx-auto mt-5'>\n          <div className='card-header colour-green'>Register</div>\n          <div className='card-body'>\n            <form onSubmit={this.handleSubmit}>\n              <div className='form-group'>\n                <div className='form-label-group'>\n                  <input\n                    type='text'\n                    id='inputName'\n                    className='form-control'\n                    placeholder='name'\n                    name='name'\n                    onChange={this.handleNameChange}\n                    required\n                  />\n                  <label htmlFor='inputName'>Full Name</label>\n                </div>\n              </div>\n\n              <div className='form-group'>\n                <div className='form-label-group'>\n                  <input\n                    id='inputEmail'\n                    className={\n                      'form-control ' +\n                      (this.state.authError ? 'is-invalid' : '')\n                    }\n                    placeholder='Email address'\n                    type='text'\n                    name='email'\n                    onChange={this.handleEmailChange}\n                    autoFocus\n                    required\n                  />\n                  <label htmlFor='inputEmail'>Email address</label>\n                  <div className='invalid-feedback'>\n                    Please provide a valid Email. or Email Exist\n                  </div>\n                </div>\n              </div>\n              <div className='form-group'>\n                <div className='form-label-group'>\n                  <input\n                    type='password'\n                    className='form-control'\n                    id='inputPassword'\n                    placeholder='******'\n                    name='password'\n                    onChange={this.handlePwdChange}\n                    required\n                  />\n                  <label htmlFor='inputPassword'>Password</label>\n                </div>\n              </div>\n\n              <div class='form-group'>\n                <label for='institute'>Institute</label>\n                <select\n                  reequired\n                  class='custom-select'\n                  id='institute'\n                  name='institute'\n                  onChange={this.handleInstitueChange}\n                  value={this.state.instituteId}\n                >\n                  <option selected value={0}>\n                    Choose...\n                  </option>\n                  {this.state.institutes.map(val => (\n                    <option value={val.id}>{val.name}</option>\n                  ))}\n\n                  {/* {console.log(this.state.instituteId)} */}\n                </select>\n              </div>\n\n              <div class='form-group'>\n                <label for='institute'>Branches</label>\n                <select\n                  reequired\n                  class='custom-select'\n                  id='branch'\n                  name='branch'\n                  onChange={this.handleBranchChanged}\n                  value={this.state.branchId}\n                >\n                  <option selected value={0}>\n                    Choose...\n                  </option>\n                  {this.state.branches.map(val => (\n                    <option value={val.id}>{val.name}</option>\n                  ))}\n                  {/* {console.log(this.state.branch)} */}\n                </select>\n              </div>\n\n              <div className='form-group'>\n                <button\n                  className='btn btn-primary btn-block'\n                  type='submit'\n                  disabled={this.state.isLoading ? true : false}\n                >\n                  Register &nbsp;&nbsp;&nbsp;\n                  {isLoading ? (\n                    <span\n                      className='spinner-border spinner-border-sm'\n                      role='status'\n                      aria-hidden='true'\n                    ></span>\n                  ) : (\n                    <span></span>\n                  )}\n                </button>\n              </div>\n            </form>\n            <div className='text-center'>\n              <Link className='d-block small mt-3' to={'/login'}>\n                Login Your Account\n              </Link>\n            </div>\n          </div>\n        </div>\n        {this.renderRedirect()}\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react';\n\n\nclass NotFound extends Component {\n    render() {\n        return (\n           <div>\n               <h1> Page not found</h1>\n            </div>\n        );\n    }\n}\n\n\n\nexport default NotFound\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport logo from './homeicon.png';\nimport Avatar from 'react-avatar';\nimport configData from \"./config.json\";\nexport class Navbar extends Component {\n    constructor(props) {\n        super(props);\n\n        let menu;\n        this.state = {\n            full_name:localStorage.getItem('full_name')\n        \n        };\n    }\n\n   \n    componentDidMount() {\n        //window.location.reload();\n        this.setState({full_name:localStorage.getItem('full_name')});\n        \n        window.scrollTo(0, 0);\n    }\n    refreshPage() {\n        window.setTimeout(function(){window.location.reload()},500)\n    }\n\n    logout = () => {\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n\n            }\n        };\n        localStorage.removeItem('token');\n        localStorage.removeItem('isLoggedIn');\n\n\n    }\n\n    render() {\n        if (!localStorage.getItem('token')) {\n            this.menu = (\n                <div class=\"container\">\n\n<a class=\"navbar-brand \" href=\"/\">\n                        <img src={logo} height={50} width={50}></img>\n                    </a>\n                    <button\n                        class=\"navbar-toggler\"\n                        type=\"button\"\n                        data-bs-toggle=\"collapse\"\n                        data-bs-target=\"#navbarCollapse\"\n                        aria-controls=\"navbarCollapse\"\n                        aria-expanded=\"false\"\n                        aria-label=\"Toggle navigation\"\n\n                    >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                        <ul class=\"navbar-nav me-auto mb-2 mb-md-0\"></ul>\n                        <form class=\"d-flex\">\n\n                            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n                                <li class=\"nav-item\">\n                                    <a class=\"nav-link active\" aria-current=\"page\" href=\"/login\">\n                                        Login\n                                    </a>\n                                </li>\n\n                                <li class=\"nav-item\">\n                                    <a\n                                        class=\"nav-link active\"\n                                        aria-current=\"page\"\n                                        href=\"/register\"\n                                    >\n                                        Register\n                                    </a>\n                                </li>\n                            </ul>\n\n                        </form>\n                    </div>\n                </div>\n            );\n        } else  {\n            this.menu = (\n                <div class=\"container\">\n                    <a class=\"navbar-brand \" href=\"/\">\n                        <img src={logo} height={50} width={50}></img>\n                    </a>\n                    <button\n                        class=\"navbar-toggler\"\n                        type=\"button\"\n                        data-bs-toggle=\"collapse\"\n                        data-bs-target=\"#navbarCollapse\"\n                        aria-controls=\"navbarCollapse\"\n                        aria-expanded=\"false\"\n                        aria-label=\"Toggle navigation\"\n                     \n\n                    >\n                        <span class=\"navbar-toggler-icon\"></span>\n\n                    </button>\n                    <div class=\"collapse navbar-collapse \" id=\"navbarCollapse\">\n\n                       \n\n                        <ul class=\"navbar-nav ms-auto mb-2 mb-md-0 \">\n                        <span style={{width:'500px'}}></span>\n                        \n                            <li class=\"nav-item\">\n                                <a\n                                    class=\"nav-link active\"\n                                    aria-current=\"page\"\n                                    href=\"/branches\"\n                                    \n                                >\n                                Branches\n                                </a>\n\n                            </li>\n                            \n                            <li class=\"nav-item\">\n                                <a\n                                    class=\"nav-link active\"\n                                    aria-current=\"page\"\n                                    href=\"/userProfile\"\n                                    \n                                >\n                               <Avatar  round name={this.state.full_name} size='40px' />\n                                </a>\n\n                            </li>\n                            <span style={{marginRight:'100px'}}></span>\n                            <li class=\"nav-item\"  >\n                                <a\n                                    class=\"nav-link active\"\n                                    aria-current=\"page\"\n                                    href=\"/login\"\n                                    onClick={this.logout}\n                                   \n                                >\n                                 <span style={{marginRight:'10px'}}>Logout </span> <i class=\"fas fa-sign-out-alt fa-2x\"></i>\n                                </a>\n\n                            </li>\n                            \n                            \n\n                        </ul>\n\n\n                    </div>\n                </div>\n            );\n\n        } \n\n        return (\n            <div>\n                <nav class=\"navbar navbar-expand-md navbar-dark bg-dark mb-4\">\n                    {this.menu}\n                </nav>\n            </div>\n        );\n    }\n}\n\nexport default Navbar;","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link, Redirect } from 'react-router-dom'\nimport moment from 'moment'\nimport configData from './config.json'\n\nexport class AllBatches extends Component {\n  state = {\n    branch: '',\n\n    branches: []\n  }\n\n  instituteHandler = (e, id, name) => {\n    // console.log(id);\n    // console.log(name);\n    localStorage.setItem('branchSelected', id)\n    const url = '/courses/' + localStorage.getItem('branchSelected')\n    this.props.history.push(url)\n  }\n  componentDidMount () {\n    if (!localStorage.getItem('isLoggedIn')) {\n      {\n        this.props.history.push('/')\n      }\n    }\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    }\n    const url =\n      `${configData.SERVER_URL}api/branches?institute=` +\n      localStorage.getItem('institute')\n    axios\n      .get(url, { headers })\n      .then(result => {\n        this.setState({ branches: result.data })\n\n        // console.log(result.data);\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  render () {\n    //console.log(this.props);\n    return (\n      <div className='container'>\n        <div className=' row'>\n          {this.state.branches.map(val => {\n            return (\n              <div className='container col-lg-4 col-md-6 col-sm-12 branches'>\n                <button\n                  className='btn-outline-success '\n                  style={{ color: 'black' }}\n                  onClick={e => this.instituteHandler(e, val.id, val.name)}\n                >\n                  <div className='batches'>\n                    <h3 style={{ paddingTop: '50px' }}>{val.name}</h3>\n                  </div>\n                </button>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AllBatches\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link, Redirect } from 'react-router-dom'\nimport moment from 'moment'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport configData from './config.json'\n\nexport class Courses extends Component {\n  state = {\n    courses: [],\n    modalShow: false,\n    showId: 0,\n    createRequested: false,\n    newCourse: ''\n  }\n\n  handleClose = () => {\n    this.setState({ modalShow: false })\n  }\n\n  handleShow = (e, id) => {\n    this.setState({ modalShow: true })\n    this.setState({ showId: id })\n  }\n\n  courseHandler = (e, id, name) => {\n    // console.log(id)\n    // console.log(name)\n    localStorage.setItem('course', id)\n    const url = '/posts/' + localStorage.getItem('course')\n    this.props.history.push(url)\n  }\n  handleCreatecourse = event => {\n    // console.log('Bye')\n    this.setState({ createRequested: true })\n  }\n\n  handleCourseName = e => {\n    this.setState({ newCourse: e.target.value })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.setState({ disabled: true })\n    const url = `${configData.SERVER_URL}api/courses`\n    // console.log(url)\n\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    }\n    const course = this.state.newCourse\n    const branch = this.props.match.params.id\n    const institute = localStorage.getItem('institute')\n    let bodyFormData = new FormData()\n    bodyFormData.set('name', course)\n    bodyFormData.set('branch', branch)\n    bodyFormData.set('institute', institute)\n\n    axios\n      .post(url, bodyFormData, { headers })\n      .then(result => {\n        // console.log(result.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    // window.setTimeout(function () {\n    //   window.location.reload()\n    // }, 1000)\n\n    // window.location.reload()\n  }\n\n  subscribeHandler = (e, id, subs) => {\n    if (!subs) {\n      // alert(\"Are you sure you want to Subscribe?\");\n      const url = `${configData.SERVER_URL}api/email-notification-subscription`\n      const headers = {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `JWT ${localStorage.getItem('token')}`\n      }\n      const user = localStorage.getItem('userid')\n\n      const course = id\n\n      let bodyFormData = new FormData()\n      bodyFormData.set('course', course)\n      bodyFormData.set('user', user)\n\n      axios\n        .post(url, bodyFormData, { headers })\n        .then(result => {\n          // this.setState({ profile: result.data });\n          // console.log(result.data)\n        })\n        .catch(error => {\n          console.log(error)\n        })\n    } else {\n      // alert(\"Are you sure you want to Unsubscribe?\");\n      const url =\n        `${configData.SERVER_URL}api/email-notification-subscription/` + subs\n      const headers = {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `JWT ${localStorage.getItem('token')}`\n      }\n\n      axios\n        .delete(url, { headers })\n        .then(result => {\n          // this.setState({ profile: result.data });\n          // console.log(result.data)\n        })\n        .catch(error => {\n          console.log(error)\n        })\n    }\n    this.handleClose()\n\n    window.setTimeout(function () {\n      window.location.reload()\n    }, 400)\n  }\n  componentDidMount () {\n    if (!localStorage.getItem('isLoggedIn')) {\n      {\n        this.props.history.push('/')\n      }\n    }\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    }\n    const url =\n      `${configData.SERVER_URL}api/courses?branch=` +\n      this.props.match.params.id +\n      '&institute=' +\n      localStorage.getItem('institute')\n    axios\n      .get(url, { headers })\n      .then(result => {\n        this.setState({ courses: result.data })\n\n        // console.log(result.data)\n      })\n      .catch(error => {\n        // console.log(error)\n      })\n  }\n\n  render () {\n    //console.log(this.props);\n    return (\n      <div className='container'>\n        {localStorage.getItem('role') == 'admin' ? (\n          <button\n            className='btn btn-primary '\n            onClick={this.handleCreatecourse}\n          >\n            Create Course\n          </button>\n        ) : (\n          <span></span>\n        )}\n\n        <div className='row'>\n          {this.state.createRequested ? (\n            <div>\n              <br></br>\n              <form onSubmit={this.handleSubmit}>\n                <div className='form-group'>\n                  <div className='form-label-group'>\n                    <input\n                      className={'form-control '}\n                      id='course_name'\n                      placeholder='course_name'\n                      type='text'\n                      name='course_name'\n                      onChange={this.handleCourseName}\n                      autoFocus\n                      required\n                    />\n                    <label htmlFor='course_name'>Course Name</label>\n                  </div>\n                </div>\n\n                <div className='form-group'>\n                  <button\n                    className={\n                      this.state.disabled\n                        ? 'btn btn-secondary  btn-block disabled'\n                        : 'btn btn-primary btn-block active'\n                    }\n                    type='submit'\n                    style={{ width: '10%', marginTop: '20px' }}\n                  >\n                    Create &nbsp;&nbsp;&nbsp;\n                  </button>\n                </div>\n              </form>\n            </div>\n          ) : (\n            <div></div>\n          )}\n\n          <br></br>\n          {this.state.courses.length == 0 ? (\n            <div>\n              <h1>No Courses added</h1>\n            </div>\n          ) : (\n            this.state.courses.map(val => {\n              return (\n                <div className=' container courses btn-group col-lg-4 col-md-6 col-sm-12'>\n                  <button\n                    style={{\n                      width: '100%',\n                      textAlign: 'center',\n                      color: 'black'\n                    }}\n                    className='btn btn-outline-success btn-block crs'\n                    onClick={e => this.courseHandler(e, val.id, val.name)}\n                  >\n                    <h3>{val.name}</h3>\n                  </button>\n\n                  <button\n                    style={{ width: '30px', height: '30px' }}\n                    className={\n                      val.email_notification_subscription\n                        ? 'btn btn-success  '\n                        : 'btn btn-secondary'\n                    }\n                    variant='primary'\n                    onClick={e => this.handleShow(e, val.id)}\n                  >\n                    <h6 style={{ alignItems: 'center', padding: 'auto' }}>\n                      {val.email_notification_subscription ? (\n                        <i class='fas fa-bell-slash'></i>\n                      ) : (\n                        <i class='fas fa-bell'></i>\n                      )}\n                    </h6>\n                  </button>\n\n                  {this.state.showId == val.id ? (\n                    <Modal\n                      show={this.state.modalShow}\n                      onHide={this.handleClose}\n                    >\n                      <Modal.Header closeButton>\n                        <Modal.Title>\n                          {val.email_notification_subscription ? (\n                            <h4>Unsubscribe</h4>\n                          ) : (\n                            <h4>Subscribe</h4>\n                          )}\n                        </Modal.Title>\n                      </Modal.Header>\n                      <Modal.Body>\n                        {val.email_notification_subscription ? (\n                          <p>\n                            Are you sure you want to unsubscribe? You wont be\n                            receiving email notification when a new post get\n                            added in {val.name}?\n                          </p>\n                        ) : (\n                          <p>\n                            Are you sure you want to Subscribe? You will be\n                            receiving email notification when a new post get\n                            added in {val.name}?\n                          </p>\n                        )}\n                      </Modal.Body>\n                      <Modal.Footer>\n                        <Button variant='secondary' onClick={this.handleClose}>\n                          Close\n                        </Button>\n                        <Button\n                          variant='primary'\n                          onClick={e =>\n                            this.subscribeHandler(\n                              e,\n                              val.id,\n                              val.email_notification_subscription\n                            )\n                          }\n                        >\n                          Yes\n                        </Button>\n                      </Modal.Footer>\n                    </Modal>\n                  ) : (\n                    <span></span>\n                  )}\n                </div>\n              )\n            })\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Courses\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link, Redirect } from 'react-router-dom'\nimport moment from 'moment'\nimport Avatar from 'react-avatar'\nimport configData from './config.json'\n\nimport { LinkPreview } from '@dhaiwat10/react-link-preview'\n\nexport class Posts extends Component {\n  state = {\n    upvote: 0,\n    upvoted: false,\n    posts: [],\n    createRequested: false,\n    createLink: '',\n    createDescription: '',\n    disabled: false\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.setState({ disabled: true })\n    const url = `${configData.SERVER_URL}api/posts`\n    // console.log(url)\n\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    }\n    const link = this.state.createLink\n    const description = this.state.createDescription\n    const course = this.props.match.params.id\n    let bodyFormData = new FormData()\n    bodyFormData.set('link', link)\n    bodyFormData.set('description', description)\n    bodyFormData.set('course', course)\n\n    axios\n      .post(url, bodyFormData, { headers })\n      .then(result => {\n        // console.log(result.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    window.setTimeout(function () {\n      window.location.reload()\n    }, 1000)\n\n    // window.location.reload()\n  }\n\n  upvoteHandler = (e, id, val, upvoted) => {\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    }\n    const url = `${configData.SERVER_URL}api/upvote`\n    const user = localStorage.getItem('userid')\n    const post = id\n    let bodyFormData = new FormData()\n    bodyFormData.set('user', user)\n    bodyFormData.set('post', post)\n\n    // console.log(user)\n    // console.log(post)\n    axios\n      .post(url, bodyFormData, { headers })\n      .then(result => {\n        // this.setState({ posts: result.data });\n        // console.log(result.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    window.setTimeout(function () {\n      window.location.reload()\n    }, 400)\n  }\n\n  handleCreatepost = event => {\n    // console.log('Bye')\n    this.setState({ createRequested: true })\n  }\n\n  handleCreateLinkChange = event => {\n    this.setState({ createLink: event.target.value })\n  }\n  handleCreateDescriptionChange = event => {\n    this.setState({ createDescription: event.target.value })\n  }\n\n  componentDidMount () {\n    // console.log(configData.SERVER_URL)\n\n    if (!localStorage.getItem('isLoggedIn')) {\n      {\n        this.props.history.push('/')\n      }\n    }\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    }\n    const url =\n      `${configData.SERVER_URL}api/posts?course=` + this.props.match.params.id\n    axios\n      .get(url, { headers })\n      .then(result => {\n        this.setState({ posts: result.data })\n\n        // console.log(result.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  render () {\n    //console.log(this.props);\n    return (\n      <div>\n        <div className='container'>\n          <button className='btn btn-primary ' onClick={this.handleCreatepost}>\n            Create Post\n          </button>\n\n          {this.state.createRequested ? (\n            <div>\n              <br></br>\n              <form onSubmit={this.handleSubmit}>\n                <div className='form-group'>\n                  <div className='form-label-group'>\n                    <input\n                      className={'form-control '}\n                      id='link'\n                      placeholder='Link'\n                      type='text'\n                      name='link'\n                      onChange={this.handleCreateLinkChange}\n                      autoFocus\n                      required\n                    />\n                    <label htmlFor='link'>Link</label>\n                  </div>\n                  <div className='form-label-group'>\n                    <input\n                      className={'form-control '}\n                      id='description'\n                      placeholder='Description'\n                      type='text'\n                      name='description'\n                      onChange={this.handleCreateDescriptionChange}\n                      autoFocus\n                      required\n                    />\n                    <label htmlFor='description'>Description</label>\n                  </div>\n                </div>\n\n                <div className='form-group'>\n                  <button\n                    className={\n                      this.state.disabled\n                        ? 'btn btn-secondary  btn-block disabled'\n                        : 'btn btn-primary btn-block active'\n                    }\n                    type='submit'\n                    style={{ width: '10%', marginTop: '20px' }}\n                  >\n                    Post &nbsp;&nbsp;&nbsp;\n                  </button>\n                </div>\n              </form>\n            </div>\n          ) : (\n            <div></div>\n          )}\n\n          <br></br>\n          <br></br>\n          {this.state.posts.length == 0 ? (\n            <div>\n              <h2>No Posts Yet</h2>\n            </div>\n          ) : (\n            this.state.posts.map(val => {\n              return (\n                <div className=' container '>\n                  <div className='posts'>\n                    <Avatar\n                      style={{ float: 'left', marginRight: '10px' }}\n                      round\n                      name={val.created_by.full_name}\n                      size='40px'\n                    />\n                    <span style={{ fontSize: '25px', color: 'black' }}>\n                      {val.created_by.full_name} - {val.created_by.email}\n                    </span>\n                    {val.modified_by ? (\n                      <h6\n                        style={{\n                          textAlign: 'left',\n                          color: 'rgba(72, 70, 75, 0.979)'\n                        }}\n                      >\n                        {' '}\n                        Modified at :{' '}\n                        {moment(val.modified_at).format(\n                          'dddd, MMMM Do YYYY, h:mm:ss a'\n                        )}{' '}\n                      </h6>\n                    ) : (\n                      <h6\n                        style={{\n                          textAlign: 'left',\n                          color: 'rgba(72, 70, 75, 0.979)'\n                        }}\n                      >\n                        {' '}\n                        {moment(val.created_at).format(\n                          'dddd, MMMM Do YYYY, h:mm:ss a'\n                        )}{' '}\n                      </h6>\n                    )}\n\n                    <h6>{val.description}</h6>\n\n                    <a target='_blank' href={val.link}>\n                      <LinkPreview url={val.link} width='100%' height='300px' />\n                    </a>\n\n                    <br></br>\n                    <span>\n                      <button\n                        className={\n                          val.is_already_upvoted\n                            ? 'btn btn-success'\n                            : ' btn btn-secondary'\n                        }\n                        onClick={e =>\n                          this.upvoteHandler(\n                            e,\n                            val.id,\n                            val.upvote_count,\n                            val.is_already_upvoted\n                          )\n                        }\n                      >\n                        <i class='fas fa-arrow-up'></i>\n                      </button>\n                      <span></span>{' '}\n                      <span style={{ size: '15px' }}>\n                        Upvote Count- {val.upvote_count}\n                      </span>\n                    </span>\n                  </div>\n                  <br></br>\n                </div>\n              )\n            })\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Posts\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link, Redirect } from 'react-router-dom'\nimport moment from 'moment'\nimport Avatar from 'react-avatar'\nimport configData from './config.json'\n\nexport class userProfile extends Component {\n  state = {\n    profile: [],\n    isEditing: false,\n    full_name: '',\n    phone: '',\n    gender: '',\n    degree: '',\n    branch: '',\n    institute: '',\n    subscription: '/mysubscription',\n    myprofile: '/userProfile',\n    myposts: '/myposts',\n    likedposts: '/likedposts',\n    disabled: false\n  }\n\n  handleDegree = event => {\n    this.setState({ degree: event.target.value })\n  }\n  handleFullname = event => {\n    this.setState({ full_name: event.target.value })\n  }\n  handlePhone = event => {\n    this.setState({ phone: event.target.value })\n  }\n  handleGender = event => {\n    this.setState({ gender: event.target.value })\n  }\n  editHandler = event => {\n    this.setState({ isEditing: true })\n  }\n  componentDidMount () {\n    if (!localStorage.getItem('isLoggedIn')) {\n      {\n        this.props.history.push('/')\n      }\n    }\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    }\n\n    const url = `${configData.SERVER_URL}api/current-user-profile`\n    axios\n      .get(url, { headers })\n      .then(result => {\n        this.setState({ profile: result.data })\n        this.setState({ full_name: result.data.full_name })\n        this.setState({ phone: result.data.phone })\n        this.setState({ degree: result.data.degree })\n        this.setState({ gender: result.data.gender })\n        this.setState({ branch: result.data.branch.name })\n        this.setState({ institute: result.data.institute.name })\n        localStorage.setItem('full_name', this.state.full_name)\n        // console.log(result.data)\n        // console.log(result.data.branch.name)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.setState({ disabled: true })\n    // console.log(this.state.phone)\n    // console.log(this.state.full_name)\n    // console.log(this.state.gender)\n    // console.log(this.state.degree)\n\n    const degree = this.state.degree\n    const gender = this.state.gender\n    const full_name = this.state.full_name\n    const phone = this.state.phone\n\n    let bodyFormData = new FormData()\n    bodyFormData.set('gender', gender)\n    bodyFormData.set('degree', degree)\n    bodyFormData.set('full_name', full_name)\n    bodyFormData.set('phone', phone)\n\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    }\n    const url = `${configData.SERVER_URL}api/current-user-profile`\n    axios\n      .put(url, bodyFormData, { headers })\n      .then(result => {\n        // this.setState({ profile: result.data });\n        // console.log(result.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n    // this.setState({isEditing:false});\n    window.setTimeout(function () {\n      window.location.reload()\n    }, 700)\n  }\n  render () {\n    return (\n      <div>\n        <div>\n          <a type='button' href={this.state.myprofile}>\n            <button\n              style={{\n                marginRight: '4px',\n                color: 'black'\n              }}\n              className='btn hover activeness'\n            >\n              My Profile\n            </button>\n          </a>\n          <a type='button' href={this.state.myposts}>\n            <button style={{ marginRight: '4px' }} className='btn hover'>\n              My Posts\n            </button>\n          </a>\n          <a type='button' href={this.state.likedposts}>\n            <button style={{ marginRight: '4px' }} className='btn  hover'>\n              Liked Posts\n            </button>{' '}\n          </a>\n          <a type='button' href={this.state.subscription}>\n            <button style={{ marginRight: '4px' }} className='btn  hover'>\n              My Subscription\n            </button>{' '}\n          </a>\n        </div>\n        <div className='container'>\n          <br></br>\n\n          {!this.state.isEditing ? (\n            <div className=' container '>\n              <button className='btn hover ' onClick={this.editHandler}>\n                <i class='fas fa-edit fa-3x'></i>\n              </button>\n              <br></br>\n              <br></br>\n              <div className='profile_placement'>\n                <div>\n                  <div className='avatar'>\n                    <Avatar\n                      round\n                      name={this.state.profile.full_name}\n                      width={100}\n                      height={100}\n                      className='avatar1'\n                    />\n                  </div>\n                </div>\n                <div className='profile'>\n                  <ul>\n                    <h5>Name:- {this.state.profile.full_name}</h5>\n                    <h5>Email:- {this.state.profile.email}</h5>\n                    <h5>Gender:- {this.state.profile.gender} </h5>\n                    <h5>Institute:- {this.state.institute}</h5>\n                    <h5>Branch:- {this.state.branch}</h5>\n                    <h5>Degree:- {this.state.profile.degree} </h5>\n                    <h5>Contact Number:- {this.state.profile.phone} </h5>\n                  </ul>\n                </div>\n              </div>\n              <br></br>\n            </div>\n          ) : (\n            <div>\n              <form onSubmit={this.handleSubmit}>\n                <div className='form-group'>\n                  <div className='form-group'>\n                    <label htmlFor='full_name' style={{ color: 'blue' }}>\n                      Full Name\n                    </label>\n                    <input\n                      className={'form-control '}\n                      id='full_name'\n                      placeholder='Full Name'\n                      type='text'\n                      name='full_name'\n                      onChange={this.handleFullname}\n                      autoFocus\n                      required\n                      value={this.state.full_name}\n                    />\n                  </div>\n\n                  <div className='form-group'>\n                    <label for='phone' style={{ color: 'blue' }}>\n                      Contact Number\n                    </label>\n                    <input\n                      className={'form-control '}\n                      id='phone'\n                      placeholder='Phone'\n                      type='text'\n                      name='phone'\n                      onChange={this.handlePhone}\n                      autoFocus\n                      required\n                      value={this.state.phone}\n                    />\n                  </div>\n                  <div class='form-group'>\n                    <label for='gender' style={{ color: 'blue' }}>\n                      Gender\n                    </label>\n                    <select\n                      reequired\n                      class='custom-select'\n                      id='gender'\n                      name='gender'\n                      onChange={this.handleGender}\n                      value={this.state.gender}\n                    >\n                      <option selected>Choose...</option>\n                      <option value={'male'}>Male</option>\n                      <option value={'female'}>Female</option>\n                      <option value={'other'}>Other</option>\n                    </select>\n                  </div>\n\n                  <div class='form-group'>\n                    <label for='degree' style={{ color: 'blue' }}>\n                      Degree\n                    </label>\n                    <select\n                      reequired\n                      class='custom-select'\n                      id='degree'\n                      name='degree'\n                      onChange={this.handleDegree}\n                      value={this.state.degree}\n                    >\n                      <option selected value={0}>\n                        Choose...\n                      </option>\n                      <option value={'btech'}>BTech</option>\n                      <option value={'mtech'}>MTech</option>\n                      <option value={'phd'}>Phd</option>\n                      <option value={'msc'}>Msc</option>\n                      <option value={'mba'}>MBA</option>\n                    </select>\n                  </div>\n                </div>\n\n                <div className='form-group' style={{ color: 'blue' }}>\n                  <button\n                    className={\n                      this.state.disabled\n                        ? 'btn btn-secondary  btn-block disabled'\n                        : 'btn btn-primary btn-block active'\n                    }\n                    type='submit'\n                  >\n                    Change Details &nbsp;&nbsp;&nbsp;\n                  </button>\n                </div>\n              </form>\n            </div>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default userProfile\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link, Redirect } from 'react-router-dom'\nimport moment from 'moment'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Avatar from 'react-avatar'\nimport { LinkPreview } from '@dhaiwat10/react-link-preview'\nimport configData from './config.json'\n\nexport class Myposts extends Component {\n  state = {\n    posts: [],\n    subscription: '/mysubscription',\n    myprofile: '/userProfile',\n    myposts: '/myposts',\n    likedposts: '/likedposts',\n    editid: 0,\n    editable: false,\n    link: '',\n    description: '',\n    showId: 0,\n    modalShow: false,\n    disabled: false\n  }\n\n  handleCreateDescriptionChange = event => {\n    this.setState({ description: event.target.value })\n  }\n\n  handleCreateLinkChange = event => {\n    this.setState({ link: event.target.value })\n  }\n\n  handleSubmit = (event, postid) => {\n    event.preventDefault()\n    this.setState({ disabled: true })\n    const url = `${configData.SERVER_URL}api/posts/` + postid\n    // console.log(url)\n\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    }\n\n    const link = this.state.link\n    const description = this.state.description\n\n    let bodyFormData = new FormData()\n    bodyFormData.set('link', link)\n    bodyFormData.set('description', description)\n\n    axios\n      .put(url, bodyFormData, { headers })\n      .then(result => {\n        // console.log(result.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    window.setTimeout(function () {\n      window.location.reload()\n    }, 500)\n  }\n\n  componentDidMount () {\n    if (!localStorage.getItem('isLoggedIn')) {\n      {\n        this.props.history.push('/')\n      }\n    }\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    }\n    const url =\n      `${configData.SERVER_URL}api/posts?course=&created_by=` +\n      localStorage.getItem('userid')\n    axios\n      .get(url, { headers })\n      .then(result => {\n        this.setState({ posts: result.data })\n        this.setState({ link: result.data.link })\n        this.setState({ description: result.data.description })\n\n        // console.log(result.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  editingHandler = e => {\n    this.setState({ editable: false })\n  }\n  deleteHandler = (e, id) => {\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    }\n    const url = `${configData.SERVER_URL}api/posts/` + id\n    axios\n      .delete(url, { headers })\n      .then(result => {\n        // this.setState({ posts: result.data });\n        // console.log(result.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n    window.setTimeout(function () {\n      window.location.reload()\n    }, 200)\n  }\n\n  editHandler = (e, id, link, description) => {\n    this.setState({ link: link })\n    this.setState({ description: description })\n    this.setState({ editid: id })\n    this.setState({ editable: true })\n  }\n\n  handleClose = () => {\n    this.setState({ modalShow: false })\n  }\n\n  handleShow = (e, id) => {\n    this.setState({ modalShow: true })\n    this.setState({ showId: id })\n  }\n\n  render () {\n    return (\n      <div>\n        <div className='container'>\n          <div>\n            <a type='button' href={this.state.myprofile}>\n              <button style={{ marginRight: '4px' }} className='btn hover '>\n                My Profile\n              </button>\n            </a>\n            <a type='button' href={this.state.myposts}>\n              <button\n                style={{\n                  marginRight: '4px',\n                  color: 'black'\n                }}\n                className='btn hover activeness'\n              >\n                My Posts\n              </button>\n            </a>\n            <a type='button' href={this.state.likedposts}>\n              <button style={{ marginRight: '4px' }} className='btn hover  '>\n                Liked Posts\n              </button>{' '}\n            </a>\n            <a type='button' href={this.state.subscription}>\n              <button style={{ marginRight: '4px' }} className='btn hover'>\n                My Subscription\n              </button>{' '}\n            </a>\n          </div>\n          <br></br>\n\n          {this.state.posts.length == 0 ? (\n            <div>\n              <h2>No Posts Yet</h2>\n            </div>\n          ) : (\n            this.state.posts.map(val => {\n              return (\n                <div className=' container '>\n                  {this.state.editable && this.state.editid == val.id ? (\n                    <div>\n                      <form onSubmit={e => this.handleSubmit(e, val.id)}>\n                        <div className='form-group editpostsdetails'>\n                          <div className='form-label-group'>\n                            <input\n                              className={'form-control '}\n                              id='link'\n                              placeholder='Link'\n                              type='text'\n                              name='link'\n                              onChange={this.handleCreateLinkChange}\n                              autoFocus\n                              required\n                              value={this.state.link}\n                            />\n                            <label htmlFor='link'>Link</label>\n                          </div>\n\n                          <div className='form-label-group'>\n                            <input\n                              className={'form-control '}\n                              id='description'\n                              placeholder='Description'\n                              type='text'\n                              name='description'\n                              onChange={this.handleCreateDescriptionChange}\n                              autoFocus\n                              required\n                              value={this.state.description}\n                            />\n                            <label htmlFor='description'>Description</label>\n                          </div>\n                        </div>\n\n                        <div className='form-group editposts'>\n                          <button\n                            className='btn btn-danger '\n                            onClick={this.editingHandler}\n                          >\n                            Cancel\n                          </button>\n                          <button\n                            className={\n                              this.state.disabled\n                                ? 'btn btn-disabled '\n                                : 'btn btn-primary '\n                            }\n                            type='submit'\n                          >\n                            Post &nbsp;&nbsp;&nbsp;\n                          </button>\n                        </div>\n                      </form>\n                      <br></br>\n                      <br></br>\n                      <br></br>\n                      <br></br>\n                      <br></br>\n                    </div>\n                  ) : (\n                    <div className='posts'>\n                      <Avatar\n                        style={{ float: 'left', marginRight: '10px' }}\n                        round\n                        name={val.created_by.full_name}\n                        size='40px'\n                      />\n                      <span style={{ fontSize: '25px', color: 'black' }}>\n                        {val.created_by.full_name} - {val.created_by.email}\n                      </span>\n                      {val.modified_by ? (\n                        <h6\n                          style={{\n                            textAlign: 'left',\n                            color: 'rgba(72, 70, 75, 0.979)'\n                          }}\n                        >\n                          {' '}\n                          Modified at :{' '}\n                          {moment(val.modified_at).format(\n                            'dddd, MMMM Do YYYY, h:mm:ss a'\n                          )}{' '}\n                        </h6>\n                      ) : (\n                        <h6\n                          style={{\n                            textAlign: 'left',\n                            color: 'rgba(72, 70, 75, 0.979)'\n                          }}\n                        >\n                          {' '}\n                          {moment(val.created_at).format(\n                            'dddd, MMMM Do YYYY, h:mm:ss a'\n                          )}{' '}\n                        </h6>\n                      )}\n                      <h6>{val.description}</h6>\n\n                      <a target='_blank' href={val.link}>\n                        <LinkPreview\n                          url={val.link}\n                          width='100%'\n                          height='300px'\n                        />\n                      </a>\n                      <br></br>\n                      <span>Upvote Count- {val.upvote_count}</span>\n                      <br></br>\n                      <button\n                        className='btn btn-danger'\n                        onClick={e => this.handleShow(e, val.id)}\n                      >\n                        <i class='fas fa-trash'></i>\n                      </button>\n                      {this.state.showId == val.id ? (\n                        <Modal\n                          show={this.state.modalShow}\n                          onHide={this.handleClose}\n                        >\n                          <Modal.Header closeButton>\n                            <Modal.Title>\n                              Are you sure you want to delete this post?\n                            </Modal.Title>\n                          </Modal.Header>\n\n                          <Modal.Footer>\n                            <Button\n                              variant='secondary'\n                              onClick={this.handleClose}\n                            >\n                              Close\n                            </Button>\n                            <Button\n                              variant='danger'\n                              onClick={e => this.deleteHandler(e, val.id)}\n                            >\n                              Yes\n                            </Button>\n                          </Modal.Footer>\n                        </Modal>\n                      ) : (\n                        <span></span>\n                      )}\n\n                      {/* <button\n                        className='btn btn-danger'\n                        onClick={e => this.deleteHandler(e, val.id)}\n                      >\n                        Delete\n                      </button> */}\n\n                      <button\n                        className='btn btn-primary'\n                        onClick={e =>\n                          this.editHandler(e, val.id, val.link, val.description)\n                        }\n                      >\n                        {' '}\n                        <i class='fas fa-user-edit'></i>\n                      </button>\n                    </div>\n                  )}\n                  <br></br>\n                </div>\n              )\n            })\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Myposts\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link, Redirect } from 'react-router-dom'\nimport moment from 'moment'\nimport Avatar from 'react-avatar'\nimport { LinkPreview } from '@dhaiwat10/react-link-preview'\nimport configData from './config.json'\n\nexport class Likedposts extends Component {\n  state = {\n    posts: [],\n\n    subscription: '/mysubscription',\n    myprofile: '/userProfile',\n    myposts: '/myposts',\n    likedposts: '/likedposts'\n  }\n  componentDidMount () {\n    if (!localStorage.getItem('isLoggedIn')) {\n      {\n        this.props.history.push('/')\n      }\n    }\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    }\n    const url = `${configData.SERVER_URL}api/posts?course=&created_by=`\n    axios\n      .get(url, { headers })\n      .then(result => {\n        this.setState({ posts: result.data })\n\n        // console.log(result.data);\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  upvoteHandler = (e, id, val, upvoted) => {\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    }\n    const url = `${configData.SERVER_URL}api/upvote`\n    const user = localStorage.getItem('userid')\n    const post = id\n    let bodyFormData = new FormData()\n    bodyFormData.set('user', user)\n    bodyFormData.set('post', post)\n\n    // console.log(user); console.log(post);\n    axios\n      .post(url, bodyFormData, { headers })\n      .then(result => {\n        // this.setState({ posts: result.data });\n        // console.log(result.data);\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    window.setTimeout(function () {\n      window.location.reload()\n    }, 200)\n  }\n\n  render () {\n    return (\n      <div>\n        <div className='container'>\n          <div>\n            <a type='button' href={this.state.myprofile}>\n              <button style={{ marginRight: '4px' }} className='btn hover'>\n                My Profile\n              </button>\n            </a>\n            <a type='button' href={this.state.myposts}>\n              <button style={{ marginRight: '4px' }} className='btn hover '>\n                My Posts\n              </button>\n            </a>\n            <a type='button' href={this.state.likedposts}>\n              <button\n                style={{ marginRight: '4px', color: 'black' }}\n                className='btn  hover activeness '\n              >\n                Liked Posts\n              </button>{' '}\n            </a>\n            <a type='button' href={this.state.subscription}>\n              <button style={{ marginRight: '4px' }} className='btn hover '>\n                My Subscription\n              </button>{' '}\n            </a>\n          </div>\n        </div>\n        <br></br>\n\n        <div>\n          {this.state.posts.length == 0 ? (\n            <div>\n              <h2>No Posts Liked Yet</h2>\n            </div>\n          ) : (\n            this.state.posts.map(val => {\n              return (\n                <div className=' container'>\n                  {val.is_already_upvoted ? (\n                    <div className='likedposts'>\n                      <Avatar\n                        style={{ float: 'left', marginRight: '10px' }}\n                        round\n                        name={val.created_by.full_name}\n                        size='40px'\n                      />\n\n                      <span style={{ fontSize: '25px', color: 'black' }}>\n                        {val.created_by.full_name} - {val.created_by.email}\n                      </span>\n                      <h6\n                        style={{\n                          textAlign: 'left',\n                          color: 'rgba(72, 70, 75, 0.979)'\n                        }}\n                      >\n                        {' '}\n                        {moment(val.created_at).format(\n                          'dddd, MMMM Do YYYY, h:mm:ss a'\n                        )}{' '}\n                      </h6>\n\n                      <h6>{val.description}</h6>\n                      <a target='_blank' href={val.link}>\n                        {' '}\n                        <LinkPreview\n                          url={val.link}\n                          width='100%'\n                          height='300px'\n                        />\n                      </a>\n\n                      <br></br>\n                      <span>\n                        <button\n                          className={\n                            val.is_already_upvoted\n                              ? 'btn btn-success'\n                              : ' btn btn-secondary'\n                          }\n                          onClick={e =>\n                            this.upvoteHandler(\n                              e,\n                              val.id,\n                              val.upvote_count,\n                              val.is_already_upvoted\n                            )\n                          }\n                        >\n                          {' '}\n                          <i class='fas fa-arrow-up'></i>\n                        </button>\n                        <span></span> Upvote Count- {val.upvote_count}\n                      </span>\n                    </div>\n                  ) : (\n                    <div></div>\n                  )}\n                </div>\n              )\n            })\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Likedposts\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link, Redirect } from 'react-router-dom'\nimport moment from 'moment'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport configData from './config.json'\n\nexport class Subscription extends Component {\n  state = {\n    courses: [],\n    subscription: '/mysubscription',\n    myprofile: '/userProfile',\n    myposts: '/myposts',\n    likedposts: '/likedposts',\n    modalShow: false,\n    showId: 0\n  }\n  handleClose = () => {\n    this.setState({ modalShow: false })\n  }\n\n  handleShow = (e, id) => {\n    this.setState({ modalShow: true })\n    this.setState({ showId: id })\n  }\n\n  componentDidMount () {\n    if (!localStorage.getItem('isLoggedIn')) {\n      {\n        this.props.history.push('/')\n      }\n    }\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    }\n    const url = `${configData.SERVER_URL}api/courses?branch=&institute=`\n    axios\n      .get(url, { headers })\n      .then(result => {\n        this.setState({ courses: result.data })\n\n        // console.log(result.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  courseHandler = (e, id, name) => {\n    // console.log(id)\n    // console.log(name)\n    localStorage.setItem('course', id)\n    const url = '/posts/' + localStorage.getItem('course')\n    this.props.history.push(url)\n  }\n\n  subscribeHandler = (e, id, subs) => {\n    if (!subs) {\n      const url = `${configData.SERVER_URL}api/email-notification-subscription`\n      const headers = {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `JWT ${localStorage.getItem('token')}`\n      }\n      const user = localStorage.getItem('userid')\n\n      const course = id\n\n      let bodyFormData = new FormData()\n      bodyFormData.set('course', course)\n      bodyFormData.set('user', user)\n\n      axios\n        .post(url, bodyFormData, { headers })\n        .then(result => {\n          // this.setState({ profile: result.data });\n          // console.log(result.data)\n        })\n        .catch(error => {\n          console.log(error)\n        })\n    } else {\n      const url =\n        `${configData.SERVER_URL}api/email-notification-subscription/` + subs\n      const headers = {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `JWT ${localStorage.getItem('token')}`\n      }\n\n      axios\n        .delete(url, { headers })\n        .then(result => {\n          // this.setState({ profile: result.data });\n          // console.log(result.data)\n        })\n        .catch(error => {\n          console.log(error)\n        })\n    }\n    this.handleClose()\n    window.setTimeout(function () {\n      window.location.reload()\n    }, 200)\n  }\n  render () {\n    return (\n      <div className='container'>\n        <div className='row'>\n          <div>\n            <a type='button' href={this.state.myprofile}>\n              <button style={{ marginRight: '4px' }} className='btn hover'>\n                My Profile\n              </button>\n            </a>\n            <a type='button' href={this.state.myposts}>\n              <button style={{ marginRight: '4px' }} className='btn hover'>\n                My Posts\n              </button>\n            </a>\n            <a type='button' href={this.state.likedposts}>\n              <button style={{ marginRight: '4px' }} className='btn hover'>\n                Liked Posts\n              </button>{' '}\n            </a>\n            <a type='button' href={this.state.subscription}>\n              <button\n                style={{ marginRight: '4px', color: 'black' }}\n                className='btn  hover activeness'\n              >\n                My Subscription\n              </button>{' '}\n            </a>\n          </div>\n\n          <div>\n            <br></br>\n            <br></br>\n            {this.state.courses.length == 0 ? (\n              <div>\n                <h1>No Courses added</h1>\n              </div>\n            ) : (\n              this.state.courses.map(val => {\n                return val.email_notification_subscription ? (\n                  <div className=' container courses btn-group col-lg-4 col-md-6 col-sm-12'>\n                    <div className='btn-group '>\n                      <button\n                        style={{\n                          width: '100%',\n                          textAlign: 'center',\n                          color: 'black'\n                        }}\n                        className='btn btn-outline-success btn-block crs'\n                        onClick={e => this.courseHandler(e, val.id, val.name)}\n                      >\n                        <h3>{val.name} By </h3>\n                        <h3>{val.branch.name}</h3>\n                      </button>\n                      <button\n                        style={{\n                          width: '30px',\n                          height: '30px',\n                          textAlign: 'center'\n                        }}\n                        className={\n                          val.email_notification_subscription\n                            ? 'btn btn-success btn-block '\n                            : 'btn btn-secondary btn-block'\n                        }\n                        variant='primary'\n                        onClick={e => this.handleShow(e, val.id)}\n                      >\n                        <h6 style={{ alignItems: 'center', size: '100%' }}>\n                          {val.email_notification_subscription ? (\n                            <i class='fas fa-bell-slash'></i>\n                          ) : (\n                            <i class='fas fa-bell'></i>\n                          )}\n                        </h6>\n                      </button>\n                      {this.state.showId == val.id ? (\n                        <Modal\n                          show={this.state.modalShow}\n                          onHide={this.handleClose}\n                        >\n                          <Modal.Header closeButton>\n                            <Modal.Title>\n                              {val.email_notification_subscription ? (\n                                <h4>Unsubscribe</h4>\n                              ) : (\n                                <h4>Subscribe</h4>\n                              )}\n                            </Modal.Title>\n                          </Modal.Header>\n                          <Modal.Body>\n                            {val.email_notification_subscription ? (\n                              <p>\n                                Are you sure you want to unsubscribe? You wont\n                                be receiving email notification when a new post\n                                get added in {val.name}?\n                              </p>\n                            ) : (\n                              <p>\n                                Are you sure you want to Subscribe? You will be\n                                receiving email notification when a new post get\n                                added in {val.name}?\n                              </p>\n                            )}\n                          </Modal.Body>\n                          <Modal.Footer>\n                            <Button\n                              variant='secondary'\n                              onClick={this.handleClose}\n                            >\n                              Close\n                            </Button>\n                            <Button\n                              variant='primary'\n                              onClick={e =>\n                                this.subscribeHandler(\n                                  e,\n                                  val.id,\n                                  val.email_notification_subscription\n                                )\n                              }\n                            >\n                              Yes\n                            </Button>\n                          </Modal.Footer>\n                        </Modal>\n                      ) : (\n                        <span></span>\n                      )}\n                    </div>\n                  </div>\n                ) : (\n                  <span></span>\n                )\n              })\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Subscription\n","import React, { Component } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport  Modal from 'react-bootstrap/Modal'\n\nfunction MyVerticallyCenteredModal(props) {\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            \n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h4>Centered Modal</h4>\n          <p>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\n            consectetur ac, vestibulum at eros.\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\nexport class random extends Component {\n\n    state={\n        modalShow:false\n    }\n\n    handleClose=()=>{\n        this.setState({modalShow:false});\n    }\n\n    handleShow=()=>{\n        this.setState({modalShow:true})\n    }\n\n    componentDidMount=()=>{\n      if(!localStorage.getItem(\"isLoggedIn\")){\n        {\n          this.props.history.push(\"/\");  \n        }\n    }\n    }\n    render() {\n        return (\n            <div>\n                <Button variant=\"primary\" onClick={this.handleShow}>\n        Launch demo modal\n      </Button>\n\n      <Modal show={this.state.modalShow} onHide={this.handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        \n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={this.handleSubcribe}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n            </div>\n        )\n    }\n}\n\nexport default random\n","import React, { Component } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nimport recourcified from './recourcified.jpeg';\nimport configData from \"./config.json\";\nexport class Home extends Component {\n  state = {\n    user: \"\",\n    redirect:false\n  };\n\n  componentDidMount(){\n    if(localStorage.getItem(\"isLoggedIn\")){\n        {\n            this.setState({redirect: true})\n            \n        }\n       \n       \n     \n    }\n  }\n  handleRegister = () => {\n    this.props.history.push(\"/register\");\n\n\n  };\n  handleLogin = () => {\n    this.props.history.push(\"/login\");\n\n  };\n  \n  renderRedirect = () => {\n   \n   if(this.state.redirect)\n   \n      return <Redirect to=\"/branches\" />;\n    \n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          {localStorage.getItem(\"isLoggedIn\")?<div style={{color: \"white\", fontSize:\"60px\"}}>Redirecting </div>:\n          <div className=\"row\">\n            <div><h1>Welcome to <img style={{width: \"25%\", height: \"25%\"}}  src={recourcified}></img></h1></div>\n            <div><h3>Find and share valuable resources.</h3></div>\n            <div className='col-lg-6 col-md-12 col-sm-12 margin '  >\n              <button onClick={this.handleRegister} className=\" radius  btn-outline-primary \" >\n                <div className='register-card text-center btn-colour' >\n                  <h2>Register</h2>\n                </div>\n              </button>\n            </div>\n\n            <div className='col-lg-6 col-md-12 col-sm-12 margin'>\n              <button onClick={this.handleLogin} className=' radius btn-outline-success' >\n                <div className='register-card register-card text-center btn-colour-2'>\n                  <h2>Login</h2>\n                </div>\n              </button>\n            </div>\n          </div>\n  }\n        </div>\n    \n        {this.renderRedirect()}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\n\n\nimport \"./App.css\";\n\nimport Login from \"./pages/login\";\nimport Register from \"./pages/register\";\nimport NotFound from \"./pages/notfound\";\nimport Navbar from './pages/navbar';\nimport Branches from './pages/branches';\nimport Courses from './pages/courses';\nimport Posts from './pages/posts';\nimport UserProfile from './pages/userProfile';\nimport Myposts from './pages/myposts';\nimport LikedPosts from './pages/likedposts';\nimport Subscription from './pages/subscription';\nimport Random from './pages/random';\nimport Home from './pages/home';\n\nclass App extends Component {\n\n    render() {\n        return (\n            <div className=\"App\">\n              \n                <Router forceRefresh={true} basename=\"/\">\n                    <Navbar ></Navbar>\n                    <Switch>\n                        \n                        <Route exact path='/login' component={Login} />\n                        \n\n                        \n                        <Route path='/register' component={Register} />\n                        <Route path='/branches' component={Branches} />\n                        <Route path='/courses/:id' component={Courses} />\n                        <Route path='/posts/:id' component={Posts} />\n                        <Route path=\"/userProfile\" component={UserProfile} />\n                        <Route path=\"/mysubscription\" component={Subscription} />\n                        <Route path=\"/likedposts\" component={LikedPosts}  />\n                        <Route path=\"/myposts\" component={Myposts} />\n                        <Route path=\"/random\" component={Random} />\n                        <Route path=\"/\" component={Home} />\n                        <Route path='*' component={NotFound} />\n                        \n\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import 'bootstrap/dist/css/bootstrap.min.css';\n// import 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './assets/vendor/fontawesome-free/css/all.min.css'\nimport './assets/css/sb-admin.css'\n// import './assets/vendor/jquery/jquery.min.js'\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n","module.exports = __webpack_public_path__ + \"static/media/homeicon.6696a981.png\";"],"sourceRoot":""}