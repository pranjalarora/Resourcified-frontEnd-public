{"ast":null,"code":"var _jsxFileName = \"/home/parth/Documents/Github/resourcified-frontend/src/pages/posts.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport moment from 'moment';\nimport Avatar from 'react-avatar';\nimport configData from './config.json';\nimport { LinkPreview } from '@dhaiwat10/react-link-preview';\nexport class Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      upvote: 0,\n      upvoted: false,\n      posts: [],\n      createRequested: false,\n      createLink: '',\n      createDescription: '',\n      disabled: false\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        disabled: true\n      });\n      const url = `${configData.SERVER_URL}api/posts`; // console.log(url)\n\n      const headers = {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `JWT ${localStorage.getItem('token')}`\n      };\n      const link = this.state.createLink;\n      const description = this.state.createDescription;\n      const course = this.props.match.params.id;\n      let bodyFormData = new FormData();\n      bodyFormData.set('link', link);\n      bodyFormData.set('description', description);\n      bodyFormData.set('course', course);\n      axios.post(url, bodyFormData, {\n        headers\n      }).then(result => {// console.log(result.data)\n      }).catch(error => {\n        console.log(error);\n      });\n      window.setTimeout(function () {\n        window.location.reload();\n      }, 1000); // window.location.reload()\n    };\n\n    this.upvoteHandler = (e, id, val, upvoted) => {\n      const headers = {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `JWT ${localStorage.getItem('token')}`\n      };\n      const url = `${configData.SERVER_URL}api/upvote`;\n      const user = localStorage.getItem('userid');\n      const post = id;\n      let bodyFormData = new FormData();\n      bodyFormData.set('user', user);\n      bodyFormData.set('post', post); // console.log(user)\n      // console.log(post)\n\n      axios.post(url, bodyFormData, {\n        headers\n      }).then(result => {// this.setState({ posts: result.data });\n        // console.log(result.data)\n      }).catch(error => {\n        console.log(error);\n      });\n      window.setTimeout(function () {\n        window.location.reload();\n      }, 400);\n    };\n\n    this.handleCreatepost = event => {\n      // console.log('Bye')\n      this.setState({\n        createRequested: true\n      });\n    };\n\n    this.handleCreateLinkChange = event => {\n      this.setState({\n        createLink: event.target.value\n      });\n    };\n\n    this.handleCreateDescriptionChange = event => {\n      this.setState({\n        createDescription: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    // console.log(configData.SERVER_URL)\n    if (!localStorage.getItem('isLoggedIn')) {\n      {\n        this.props.history.push('/');\n      }\n    }\n\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    };\n    const url = `${configData.SERVER_URL}api/posts?course=` + this.props.match.params.id;\n    axios.get(url, {\n      headers\n    }).then(result => {\n      this.setState({\n        posts: result.data\n      }); // console.log(result.data)\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    //console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, \" \", localStorage.getItem('branch'), \" ---> \", localStorage.getItem('course_name'))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary \",\n      onClick: this.handleCreatepost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, \"Create Post\"), this.state.createRequested ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: 'form-control ',\n      id: \"link\",\n      placeholder: \"Link\",\n      type: \"text\",\n      name: \"link\",\n      onChange: this.handleCreateLinkChange,\n      autoFocus: true,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, \"Link\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: 'form-control ',\n      id: \"description\",\n      placeholder: \"Description\",\n      type: \"text\",\n      name: \"description\",\n      onChange: this.handleCreateDescriptionChange,\n      autoFocus: true,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, \"Description\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: this.state.disabled ? 'btn btn-secondary  btn-block disabled' : 'btn btn-primary btn-block active',\n      type: \"submit\",\n      style: {\n        width: '10%',\n        marginTop: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }\n    }, \"Post \\xA0\\xA0\\xA0\")))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }), this.state.posts.length == 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    }, \"No Posts Yet\")) : this.state.posts.map(val => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \" container \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"posts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        style: {\n          float: 'left',\n          marginRight: '10px'\n        },\n        round: true,\n        name: val.created_by.full_name,\n        size: \"40px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontSize: '25px',\n          color: 'black'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }\n      }, val.created_by.full_name, \" - \", val.created_by.email), val.modified_by ? /*#__PURE__*/React.createElement(\"h6\", {\n        style: {\n          textAlign: 'left',\n          color: 'rgba(72, 70, 75, 0.979)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 23\n        }\n      }, ' ', \"Modified at :\", ' ', moment(val.modified_at).format('dddd, MMMM Do YYYY, h:mm:ss a'), ' ') : /*#__PURE__*/React.createElement(\"h6\", {\n        style: {\n          textAlign: 'left',\n          color: 'rgba(72, 70, 75, 0.979)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 23\n        }\n      }, ' ', moment(val.created_at).format('dddd, MMMM Do YYYY, h:mm:ss a'), ' '), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }\n      }, val.description), /*#__PURE__*/React.createElement(\"a\", {\n        target: \"_blank\",\n        href: val.link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(LinkPreview, {\n        url: val.link,\n        width: \"100%\",\n        height: \"300px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: val.is_already_upvoted ? 'btn btn-success' : ' btn btn-secondary',\n        onClick: e => this.upvoteHandler(e, val.id, val.upvote_count, val.is_already_upvoted),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fas fa-arrow-up\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 23\n        }\n      }), ' ', /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          size: '15px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 23\n        }\n      }, \"Upvote Count- \", val.upvote_count))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 19\n        }\n      }));\n    })));\n  }\n\n}\nexport default Posts;","map":{"version":3,"sources":["/home/parth/Documents/Github/resourcified-frontend/src/pages/posts.js"],"names":["React","Component","axios","Link","Redirect","moment","Avatar","configData","LinkPreview","Posts","state","upvote","upvoted","posts","createRequested","createLink","createDescription","disabled","handleSubmit","event","preventDefault","setState","url","SERVER_URL","headers","Accept","Authorization","localStorage","getItem","link","description","course","props","match","params","id","bodyFormData","FormData","set","post","then","result","catch","error","console","log","window","setTimeout","location","reload","upvoteHandler","e","val","user","handleCreatepost","handleCreateLinkChange","target","value","handleCreateDescriptionChange","componentDidMount","history","push","get","data","render","width","marginTop","length","map","float","marginRight","created_by","full_name","fontSize","color","email","modified_by","textAlign","modified_at","format","created_at","is_already_upvoted","upvote_count","size"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link, Redirect } from 'react-router-dom'\nimport moment from 'moment'\nimport Avatar from 'react-avatar'\nimport configData from './config.json'\n\nimport { LinkPreview } from '@dhaiwat10/react-link-preview'\n\nexport class Posts extends Component {\n  state = {\n    upvote: 0,\n    upvoted: false,\n    posts: [],\n    createRequested: false,\n    createLink: '',\n    createDescription: '',\n    disabled: false\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.setState({ disabled: true })\n    const url = `${configData.SERVER_URL}api/posts`\n    // console.log(url)\n\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    }\n    const link = this.state.createLink\n    const description = this.state.createDescription\n    const course = this.props.match.params.id\n    let bodyFormData = new FormData()\n    bodyFormData.set('link', link)\n    bodyFormData.set('description', description)\n    bodyFormData.set('course', course)\n\n    axios\n      .post(url, bodyFormData, { headers })\n      .then(result => {\n        // console.log(result.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    window.setTimeout(function () {\n      window.location.reload()\n    }, 1000)\n\n    // window.location.reload()\n  }\n\n  upvoteHandler = (e, id, val, upvoted) => {\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    }\n    const url = `${configData.SERVER_URL}api/upvote`\n    const user = localStorage.getItem('userid')\n    const post = id\n    let bodyFormData = new FormData()\n    bodyFormData.set('user', user)\n    bodyFormData.set('post', post)\n\n    // console.log(user)\n    // console.log(post)\n    axios\n      .post(url, bodyFormData, { headers })\n      .then(result => {\n        // this.setState({ posts: result.data });\n        // console.log(result.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    window.setTimeout(function () {\n      window.location.reload()\n    }, 400)\n  }\n\n  handleCreatepost = event => {\n    // console.log('Bye')\n    this.setState({ createRequested: true })\n  }\n\n  handleCreateLinkChange = event => {\n    this.setState({ createLink: event.target.value })\n  }\n  handleCreateDescriptionChange = event => {\n    this.setState({ createDescription: event.target.value })\n  }\n\n  componentDidMount () {\n    // console.log(configData.SERVER_URL)\n\n    if (!localStorage.getItem('isLoggedIn')) {\n      {\n        this.props.history.push('/')\n      }\n    }\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    }\n    const url =\n      `${configData.SERVER_URL}api/posts?course=` + this.props.match.params.id\n    axios\n      .get(url, { headers })\n      .then(result => {\n        this.setState({ posts: result.data })\n\n        // console.log(result.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  render () {\n    //console.log(this.props);\n    return (\n      <div>\n        <div className='container'>\n        <br></br>\n        <div>\n          <h2> {localStorage.getItem('branch')} ---> {localStorage.getItem('course_name')}</h2>\n        </div>\n        <br></br>\n          <button className='btn btn-primary ' onClick={this.handleCreatepost}>\n            Create Post\n          </button>\n\n          {this.state.createRequested ? (\n            <div>\n              <br></br>\n              <form onSubmit={this.handleSubmit}>\n                <div className='form-group'>\n                  <div className='form-label-group'>\n                    <input\n                      className={'form-control '}\n                      id='link'\n                      placeholder='Link'\n                      type='text'\n                      name='link'\n                      onChange={this.handleCreateLinkChange}\n                      autoFocus\n                      required\n                    />\n                    <label htmlFor='link'>Link</label>\n                  </div>\n                  <div className='form-label-group'>\n                    <input\n                      className={'form-control '}\n                      id='description'\n                      placeholder='Description'\n                      type='text'\n                      name='description'\n                      onChange={this.handleCreateDescriptionChange}\n                      autoFocus\n                      required\n                    />\n                    <label htmlFor='description'>Description</label>\n                  </div>\n                </div>\n\n                <div className='form-group'>\n                  <button\n                    className={\n                      this.state.disabled\n                        ? 'btn btn-secondary  btn-block disabled'\n                        : 'btn btn-primary btn-block active'\n                    }\n                    type='submit'\n                    style={{ width: '10%', marginTop: '20px' }}\n                  >\n                    Post &nbsp;&nbsp;&nbsp;\n                  </button>\n                </div>\n              </form>\n            </div>\n          ) : (\n            <div></div>\n          )}\n\n          <br></br>\n          <br></br>\n          {this.state.posts.length == 0 ? (\n            <div>\n              <h2>No Posts Yet</h2>\n            </div>\n          ) : (\n            this.state.posts.map(val => {\n              return (\n                <div className=' container '>\n                  <div className='posts'>\n                    <Avatar\n                      style={{ float: 'left', marginRight: '10px' }}\n                      round\n                      name={val.created_by.full_name}\n                      size='40px'\n                    />\n                    <span style={{ fontSize: '25px', color: 'black' }}>\n                      {val.created_by.full_name} - {val.created_by.email}\n                    </span>\n                    {val.modified_by ? (\n                      <h6\n                        style={{\n                          textAlign: 'left',\n                          color: 'rgba(72, 70, 75, 0.979)'\n                        }}\n                      >\n                        {' '}\n                        Modified at :{' '}\n                        {moment(val.modified_at).format(\n                          'dddd, MMMM Do YYYY, h:mm:ss a'\n                        )}{' '}\n                      </h6>\n                    ) : (\n                      <h6\n                        style={{\n                          textAlign: 'left',\n                          color: 'rgba(72, 70, 75, 0.979)'\n                        }}\n                      >\n                        {' '}\n                        {moment(val.created_at).format(\n                          'dddd, MMMM Do YYYY, h:mm:ss a'\n                        )}{' '}\n                      </h6>\n                    )}\n\n                    <h6>{val.description}</h6>\n\n                    <a target='_blank' href={val.link}>\n                      <LinkPreview url={val.link} width='100%' height='300px' />\n                    </a>\n\n                    <br></br>\n                    <span>\n                      <button\n                        className={\n                          val.is_already_upvoted\n                            ? 'btn btn-success'\n                            : ' btn btn-secondary'\n                        }\n                        onClick={e =>\n                          this.upvoteHandler(\n                            e,\n                            val.id,\n                            val.upvote_count,\n                            val.is_already_upvoted\n                          )\n                        }\n                      >\n                        <i class='fas fa-arrow-up'></i>\n                      </button>\n                      <span></span>{' '}\n                      <span style={{ size: '15px' }}>\n                        Upvote Count- {val.upvote_count}\n                      </span>\n                    </span>\n                  </div>\n                  <br></br>\n                </div>\n              )\n            })\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Posts\n"]},"metadata":{},"sourceType":"module"}