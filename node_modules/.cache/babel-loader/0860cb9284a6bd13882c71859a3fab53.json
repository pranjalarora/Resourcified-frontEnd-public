{"ast":null,"code":"var _jsxFileName = \"/home/parth/Documents/Github/resourcified-frontend/src/pages/posts.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport moment from 'moment';\nexport class Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      upvote: 0,\n      upvoted: false,\n      posts: [],\n      createRequested: false\n    };\n\n    this.postHandler = (e, id) => {\n      console.log(id); // localStorage.setItem(\"branchSelected\",id);\n      //     const url = \"/posts/\" + localStorage.getItem('branchSelected');\n      //     this.props.history.push(url);\n    };\n\n    this.upvoteHandler = (e, id, val) => {\n      const headers = {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`\n      };\n      const url = \"http://localhost:8000/api/upvote\";\n      const user = localStorage.getItem(\"userid\");\n      const post = id;\n      let bodyFormData = new FormData();\n      bodyFormData.set(\"user\", user);\n      bodyFormData.set(\"post\", post);\n      console.log(user);\n      console.log(post);\n      axios.post(url, bodyFormData, {\n        headers\n      }).then(result => {\n        // this.setState({ posts: result.data });\n        console.log(result.data);\n      }).catch(error => {\n        console.log(error);\n      });\n      window.location.reload();\n    };\n\n    this.handleCreatePost = e => {\n      console.log(\"Bye\");\n      this.setState({\n        createRequested: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `JWT ${localStorage.getItem(\"token\")}`\n    };\n    const url = \"http://localhost:8000/api/posts?course=\" + this.props.match.params.id;\n    axios.get(url, {\n      headers\n    }).then(result => {\n      this.setState({\n        posts: result.data\n      });\n      console.log(result.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    //console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-success \",\n      onclick: e => this.handleCreatePost(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 14\n      }\n    }, \"Create Post\")), this.state.createRequested, this.state.createRequested ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"Bye\") : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 16\n      }\n    }, \"Hello\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }), this.state.posts.length == 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 44\n      }\n    }, \"No Posts Yet\")) : this.state.posts.map(val => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \" container \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"posts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }, \"Posted By:- \", val.created_by.full_name, \" - \", val.created_by.email), /*#__PURE__*/React.createElement(\"h6\", {\n        style: {\n          textAlign: 'left'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, \" Posted on : \", moment(val.created_at).format(\"dddd, MMMM Do YYYY, h:mm:ss a\"), \" \"), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }, val.description), /*#__PURE__*/React.createElement(\"a\", {\n        target: \"_blank\",\n        href: val.link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 56\n        }\n      }, \" \", val.link)), /*#__PURE__*/React.createElement(\"button\", {\n        className: val.is_already_upvoted ? \"btn btn-success\" : \" btn btn-secondary\",\n        onClick: e => this.upvoteHandler(e, val.id, val.upvote_count),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, \"Upvote\"), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }\n      }, \"Upvote-Count \", val.upvote_count)), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }));\n    })));\n  }\n\n}\nexport default Posts;","map":{"version":3,"sources":["/home/parth/Documents/Github/resourcified-frontend/src/pages/posts.js"],"names":["React","Component","axios","Link","Redirect","moment","Posts","state","upvote","upvoted","posts","createRequested","postHandler","e","id","console","log","upvoteHandler","val","headers","Accept","Authorization","localStorage","getItem","url","user","post","bodyFormData","FormData","set","then","result","data","catch","error","window","location","reload","handleCreatePost","setState","componentDidMount","props","match","params","get","render","length","map","created_by","full_name","email","textAlign","created_at","format","description","link","is_already_upvoted","upvote_count"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport moment from 'moment';\n\nexport class Posts extends Component {\n  state = {\n    \n    upvote:0,\n    upvoted:false,\n    posts: [],\n    createRequested:false,\n  };\n  \n\n  postHandler = (e, id) => {\n    \nconsole.log(id);\n\n\n// localStorage.setItem(\"branchSelected\",id);\n//     const url = \"/posts/\" + localStorage.getItem('branchSelected');\n//     this.props.history.push(url);\n\n\n  }\n\n  upvoteHandler=(e,id,val)=>{\n\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `JWT ${localStorage.getItem(\"token\")}`\n\n    };\n    const url = \"http://localhost:8000/api/upvote\";\n    const user = localStorage.getItem(\"userid\");\n    const post = id;\n    let bodyFormData = new FormData();\n    bodyFormData.set(\"user\", user);\n    bodyFormData.set(\"post\", post);\n\n    console.log(user);console.log(post);\n      axios\n        .post(url, bodyFormData,{headers})\n        .then((result) => {\n  \n          \n          // this.setState({ posts: result.data });\n  \n  \n          console.log(result.data);\n        })\n        .catch((error) => {\n          console.log(error);\n          \n        });\n  \n    window.location.reload()\n    \n  }\n\n  handleCreatePost=(e)=>{\n    console.log(\"Bye\")\n    this.setState({ createRequested:true});\n  }\n\n \n  componentDidMount() {\n    const headers = {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`\n  \n      };\n      const url = \"http://localhost:8000/api/posts?course=\"+this.props.match.params.id;\n      axios\n        .get(url, { headers })\n        .then((result) => {\n  \n          \n          this.setState({ posts: result.data });\n  \n  \n          console.log(result.data);\n        })\n        .catch((error) => {\n          console.log(error);\n          \n        });\n  }\n  \n\n\n\n  render() {\n    //console.log(this.props);\n    return (\n      <div>\n        \n        <div className=\"container\">\n        <a  ><button className=\"btn btn-outline-success \" onclick={(e)=>this.handleCreatePost(e)}>Create Post</button></a>\n        {this.state.createRequested}\n        {this.state.createRequested?\n          <div>\n       Bye\n        </div>:<div>Hello</div>}\n\n        <br></br>\n        <br></br>\n          {this.state.posts.length==0?<div><h2>No Posts Yet</h2></div>: this.state.posts.map((val) => {\n           \n            return (\n              <div className=\" container \">\n                <div className=\"posts\">\n                  \n                    <h4>Posted By:- {val.created_by.full_name} - {val.created_by.email}</h4>\n                    <h6 style={{textAlign:'left'}}> Posted on : {moment(val.created_at).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")} </h6>\n                    <h3>{val.description}</h3>\n                    \n                    <a target=\"_blank\" href={val.link}><h3> {val.link}</h3></a>\n                    \n                    \n                    <button className={val.is_already_upvoted?\"btn btn-success\":\" btn btn-secondary\"} onClick={(e)=>this.upvoteHandler(e,val.id,val.upvote_count)}>Upvote</button>\n                    \n                    <h3>Upvote-Count {val.upvote_count}</h3>\n                  \n                </div>\n                <br></br>\n              </div>\n\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}