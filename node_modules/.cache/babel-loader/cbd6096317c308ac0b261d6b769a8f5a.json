{"ast":null,"code":"var _jsxFileName = \"/home/parth/Documents/Github/resourcified-frontend/src/pages/posts.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport moment from 'moment';\nexport class Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      upvote: 0,\n      upvoted: false,\n      posts: [],\n      createRequested: false\n    };\n\n    this.postHandler = (e, id) => {\n      console.log(id); // localStorage.setItem(\"branchSelected\",id);\n      //     const url = \"/posts/\" + localStorage.getItem('branchSelected');\n      //     this.props.history.push(url);\n    };\n\n    this.upvoteHandler = (e, id, val, upvoted) => {\n      const headers = {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`\n      };\n      const url = \"http://localhost:8000/api/upvote\";\n      const user = localStorage.getItem(\"userid\");\n      const post = id;\n      let bodyFormData = new FormData();\n      bodyFormData.set(\"user\", user);\n      bodyFormData.set(\"post\", post);\n      console.log(user);\n      console.log(post);\n      axios.post(url, bodyFormData, {\n        headers\n      }).then(result => {\n        // this.setState({ posts: result.data });\n        console.log(result.data);\n      }).catch(error => {\n        console.log(error);\n      }); // if(this.state.upvoted)\n      //   {\n      //     this.setState({upvoted:false});\n      //     this.setState({upvote:this.state.upvote-1});\n      //   }\n      // else {\n      //   if(!val)\n      //     {\n      //       this.setState({upvoted:true});\n      //     this.setState({upvote:1});\n      //     }\n      //   else {\n      //     this.setState({upvoted:true});\n      //     this.setState({upvote:val+1})\n      //   }\n      // }\n\n      if (!upvoted) {\n        if (!val) {\n          localStorage.setItem(\"upvote\", 1);\n          this.setState({\n            upvoted: true\n          });\n        } else {\n          localStorage.setItem(\"upvote\", val + 1);\n          this.setState({\n            upvoted: true\n          });\n        }\n      } else {\n        localStorage.setItem(\"upvote\", val - 1);\n        this.setState({\n          upvoted: false\n        });\n      }\n\n      window.location.reload();\n    };\n\n    this.handleCreatePost = e => {};\n  }\n\n  componentDidMount() {\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `JWT ${localStorage.getItem(\"token\")}`\n    };\n    const url = \"http://localhost:8000/api/posts?course=\" + this.props.match.params.id;\n    axios.get(url, {\n      headers\n    }).then(result => {\n      this.setState({\n        posts: result.data\n      });\n      console.log(result.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    //console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/createpost\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-success \",\n      onclick: this.handleCreatePost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 32\n      }\n    }, \"Create Post\")), this.state.createRequested ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control \",\n      id: \"link\",\n      placeholder: \"Link\",\n      type: \"text\",\n      name: \"link\",\n      onChange: this.handleCreateLinkChange,\n      autoFocus: true,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"inputEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    }, \"Link\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control \",\n      id: \"description\",\n      placeholder: \"Description\",\n      type: \"text\",\n      name: \"description\",\n      onChange: this.handleCreateDescriptionChange,\n      autoFocus: true,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"inputEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }\n    }, \"Description\"))))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }), this.state.posts.length == 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 44\n      }\n    }, \"No Posts Yet\")) : this.state.posts.map(val => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \" container \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"posts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }\n      }, \"Posted By:- \", val.created_by.full_name, \" - \", val.created_by.email), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      }, val.description), /*#__PURE__*/React.createElement(\"a\", {\n        target: \"_blank\",\n        href: val.link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 56\n        }\n      }, \" \", val.link)), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }\n      }, \"Posted on : \", moment(val.created_at).format(\"dddd, MMMM Do YYYY, h:mm:ss a\"), \" \"), /*#__PURE__*/React.createElement(\"button\", {\n        className: this.state.upvoted ? \"btn btn-success\" : \" btn btn-secondary\",\n        onClick: e => this.upvoteHandler(e, val.id, val.upvote_count, val.is_already_upvoted),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }\n      }, \"Upvote\"), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }\n      }, \"Upvote-Count \", localStorage.getItem(\"upvote\"))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }\n      }));\n    })));\n  }\n\n}\nexport default Posts;","map":{"version":3,"sources":["/home/parth/Documents/Github/resourcified-frontend/src/pages/posts.js"],"names":["React","Component","axios","Link","Redirect","moment","Posts","state","upvote","upvoted","posts","createRequested","postHandler","e","id","console","log","upvoteHandler","val","headers","Accept","Authorization","localStorage","getItem","url","user","post","bodyFormData","FormData","set","then","result","data","catch","error","setItem","setState","window","location","reload","handleCreatePost","componentDidMount","props","match","params","get","render","handleSubmit","handleCreateLinkChange","handleCreateDescriptionChange","length","map","created_by","full_name","email","description","link","created_at","format","upvote_count","is_already_upvoted"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport moment from 'moment';\n\nexport class Posts extends Component {\n  state = {\n    \n    upvote:0,\n    upvoted:false,\n    posts: [],\n    createRequested:false,\n  };\n  \n\n  postHandler = (e, id) => {\n    \nconsole.log(id);\n\n\n// localStorage.setItem(\"branchSelected\",id);\n//     const url = \"/posts/\" + localStorage.getItem('branchSelected');\n//     this.props.history.push(url);\n\n\n  }\n\n  upvoteHandler=(e,id,val,upvoted)=>{\n\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `JWT ${localStorage.getItem(\"token\")}`\n\n    };\n    const url = \"http://localhost:8000/api/upvote\";\n    const user = localStorage.getItem(\"userid\");\n    const post = id;\n    let bodyFormData = new FormData();\n    bodyFormData.set(\"user\", user);\n    bodyFormData.set(\"post\", post);\n\n    console.log(user);console.log(post);\n      axios\n        .post(url, bodyFormData,{headers})\n        .then((result) => {\n  \n          \n          // this.setState({ posts: result.data });\n  \n  \n          console.log(result.data);\n        })\n        .catch((error) => {\n          console.log(error);\n          \n        });\n    // if(this.state.upvoted)\n    //   {\n    //     this.setState({upvoted:false});\n    //     this.setState({upvote:this.state.upvote-1});\n    //   }\n    // else {\n    //   if(!val)\n    //     {\n    //       this.setState({upvoted:true});\n    //     this.setState({upvote:1});\n    //     }\n      \n    //   else {\n    //     this.setState({upvoted:true});\n    //     this.setState({upvote:val+1})\n    //   }\n    // }\n\n    if(!upvoted){\n      if(!val){\n        localStorage.setItem(\"upvote\",1);\n        this.setState({upvoted:true})\n      }\n      else{\n        localStorage.setItem(\"upvote\",val+1);\n        this.setState({upvoted:true})\n      } \n    }\n\n    else {\n      localStorage.setItem(\"upvote\",val-1);\n      this.setState({upvoted:false})\n    }\n\n   \n    window.location.reload()\n    \n  }\n\n  handleCreatePost=(e)=>{\n\n  }\n\n \n  componentDidMount() {\n    const headers = {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`\n  \n      };\n      const url = \"http://localhost:8000/api/posts?course=\"+this.props.match.params.id;\n      axios\n        .get(url, { headers })\n        .then((result) => {\n  \n          \n          this.setState({ posts: result.data });\n  \n  \n          console.log(result.data);\n        })\n        .catch((error) => {\n          console.log(error);\n          \n        });\n  }\n  \n\n\n\n  render() {\n    //console.log(this.props);\n    return (\n      <div>\n        \n        <div className=\"container\">\n        <a  href=\"/createpost\"><button className=\"btn btn-outline-success \" onclick={this.handleCreatePost}>Create Post</button></a>\n        {this.state.createRequested?<div>\n          <form onSubmit={this.handleSubmit}>\n              <div className=\"form-group\">\n                <div className=\"form-label-group\">\n                  <input\n                    className={\n                      \"form-control \" \n                    }\n                    id=\"link\"\n                    placeholder=\"Link\"\n                    type=\"text\"\n                    name=\"link\"\n                    onChange={this.handleCreateLinkChange}\n                    autoFocus\n                    required\n                  />\n                  <label htmlFor=\"inputEmail\">Link</label>\n                  \n                </div>\n\n                <div className=\"form-label-group\">\n                  <input\n                    className={\n                      \"form-control \" \n                    }\n                    id=\"description\"\n                    placeholder=\"Description\"\n                    type=\"text\"\n                    name=\"description\"\n                    onChange={this.handleCreateDescriptionChange}\n                    autoFocus\n                    required\n                  />\n                  <label htmlFor=\"inputEmail\">Description</label>\n                  \n                </div>\n              </div>\n          </form>\n        </div>:<div></div>}\n\n        <br></br>\n        <br></br>\n          {this.state.posts.length==0?<div><h2>No Posts Yet</h2></div>: this.state.posts.map((val) => {\n           \n            return (\n              <div className=\" container \">\n                <div className=\"posts\">\n                  \n                    <h4>Posted By:- {val.created_by.full_name} - {val.created_by.email}</h4>\n                    <h3>{val.description}</h3>\n                    \n                    <a target=\"_blank\" href={val.link}><h3> {val.link}</h3></a>\n                    <h3>Posted on : {moment(val.created_at).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")} </h3>\n                    \n                    <button className={this.state.upvoted?\"btn btn-success\":\" btn btn-secondary\"} onClick={(e)=>this.upvoteHandler(e,val.id,val.upvote_count,val.is_already_upvoted)}>Upvote</button>\n                    \n                    <h3>Upvote-Count {localStorage.getItem(\"upvote\")}</h3>\n                  \n                </div>\n                <br></br>\n              </div>\n\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}