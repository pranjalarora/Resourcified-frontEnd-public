{"ast":null,"code":"var _jsxFileName = \"/home/parth/Documents/Github/resourcified-frontend/src/pages/posts.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport moment from 'moment';\nexport class Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      upvote: 0,\n      upvoted: false,\n      posts: [],\n      createRequested: false,\n      createLink: '',\n      createDescription: '',\n      disabled: false\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        disabled: true\n      });\n      const url = 'http://localhost:8000/api/posts';\n      console.log(url);\n      const headers = {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `JWT ${localStorage.getItem('token')}`\n      };\n      const link = this.state.createLink;\n      const description = this.state.createDescription;\n      const course = this.props.match.params.id;\n      let bodyFormData = new FormData();\n      bodyFormData.set('link', link);\n      bodyFormData.set('description', description);\n      bodyFormData.set('course', course);\n      axios.post(url, bodyFormData, {\n        headers\n      }).then(result => {\n        console.log(result.data);\n      }).catch(error => {\n        console.log(error);\n      });\n      window.setTimeout(function () {\n        window.location.reload();\n      }, 1000); // window.location.reload()\n    };\n\n    this.upvoteHandler = (e, id, val, upvoted) => {\n      const headers = {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `JWT ${localStorage.getItem('token')}`\n      };\n      const url = 'http://localhost:8000/api/upvote';\n      const user = localStorage.getItem('userid');\n      const post = id;\n      let bodyFormData = new FormData();\n      bodyFormData.set('user', user);\n      bodyFormData.set('post', post);\n      console.log(user);\n      console.log(post);\n      axios.post(url, bodyFormData, {\n        headers\n      }).then(result => {\n        // this.setState({ posts: result.data });\n        console.log(result.data);\n      }).catch(error => {\n        console.log(error);\n      });\n      window.setTimeout(function () {\n        window.location.reload();\n      }, 400);\n    };\n\n    this.handleCreatepost = event => {\n      console.log('Bye');\n      this.setState({\n        createRequested: true\n      });\n    };\n\n    this.handleCreateLinkChange = event => {\n      this.setState({\n        createLink: event.target.value\n      });\n    };\n\n    this.handleCreateDescriptionChange = event => {\n      this.setState({\n        createDescription: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (!localStorage.getItem(\"isLoggedIn\")) {\n      {\n        this.props.history.push(\"/\");\n      }\n    }\n\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    };\n    const url = 'http://localhost:8000/api/posts?course=' + this.props.match.params.id;\n    axios.get(url, {\n      headers\n    }).then(result => {\n      this.setState({\n        posts: result.data\n      });\n      console.log(result.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    //console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary \",\n      onClick: this.handleCreatepost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, \"Create Post\"), this.state.createRequested ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: 'form-control ',\n      id: \"link\",\n      placeholder: \"Link\",\n      type: \"text\",\n      name: \"link\",\n      onChange: this.handleCreateLinkChange,\n      autoFocus: true,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, \"Link\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: 'form-control ',\n      id: \"description\",\n      placeholder: \"Description\",\n      type: \"text\",\n      name: \"description\",\n      onChange: this.handleCreateDescriptionChange,\n      autoFocus: true,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, \"Description\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: this.state.disabled ? 'btn btn-secondary  btn-block disabled' : 'btn btn-primary btn-block active',\n      type: \"submit\",\n      style: {\n        width: '10%',\n        marginTop: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }, \"Post \\xA0\\xA0\\xA0\")))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }), this.state.posts.length == 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }, \"No Posts Yet\")) : this.state.posts.map(val => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \" container \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"posts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }\n      }, val.description), /*#__PURE__*/React.createElement(\"a\", {\n        target: \"_blank\",\n        href: val.link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }\n      }, val.link), /*#__PURE__*/React.createElement(\"h6\", {\n        style: {\n          color: 'rgba(72, 70, 75, 0.979)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }\n      }, \"Posted By:- \", val.created_by.full_name, \" -\", ' ', val.created_by.email), val.modified_by ? /*#__PURE__*/React.createElement(\"h6\", {\n        style: {\n          textAlign: 'left',\n          color: 'rgba(72, 70, 75, 0.979)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }\n      }, ' ', \"Modified at :\", ' ', moment(val.modified_at).format('dddd, MMMM Do YYYY, h:mm:ss a'), ' ') : /*#__PURE__*/React.createElement(\"h6\", {\n        style: {\n          textAlign: 'left',\n          color: 'rgba(72, 70, 75, 0.979)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 19\n        }\n      }, ' ', \"Posted at :\", ' ', moment(val.created_at).format('dddd, MMMM Do YYYY, h:mm:ss a'), ' '), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: val.is_already_upvoted ? 'btn btn-success' : ' btn btn-secondary',\n        onClick: e => this.upvoteHandler(e, val.id, val.upvote_count, val.is_already_upvoted),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 23\n        }\n      }, \"Upvote\"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 23\n        }\n      }), \" Upvote Count- \", val.upvote_count)), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 19\n        }\n      }));\n    })));\n  }\n\n}\nexport default Posts;","map":{"version":3,"sources":["/home/parth/Documents/Github/resourcified-frontend/src/pages/posts.js"],"names":["React","Component","axios","Link","Redirect","moment","Posts","state","upvote","upvoted","posts","createRequested","createLink","createDescription","disabled","handleSubmit","event","preventDefault","setState","url","console","log","headers","Accept","Authorization","localStorage","getItem","link","description","course","props","match","params","id","bodyFormData","FormData","set","post","then","result","data","catch","error","window","setTimeout","location","reload","upvoteHandler","e","val","user","handleCreatepost","handleCreateLinkChange","target","value","handleCreateDescriptionChange","componentDidMount","history","push","get","render","width","marginTop","length","map","color","created_by","full_name","email","modified_by","textAlign","modified_at","format","created_at","is_already_upvoted","upvote_count"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link, Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\n\nexport class Posts extends Component {\n  state = {\n    upvote: 0,\n    upvoted: false,\n    posts: [],\n    createRequested: false,\n    createLink: '',\n    createDescription: '',\n    disabled: false,\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.setState({ disabled:true });\n    const url = 'http://localhost:8000/api/posts'\n    console.log(url)\n\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    }\n    const link = this.state.createLink\n    const description = this.state.createDescription\n    const course = this.props.match.params.id\n    let bodyFormData = new FormData()\n    bodyFormData.set('link', link)\n    bodyFormData.set('description', description)\n    bodyFormData.set('course', course)\n\n    axios\n      .post(url, bodyFormData, { headers })\n      .then(result => {\n        console.log(result.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n      window.setTimeout(function(){window.location.reload()},1000)\n     \n    // window.location.reload()\n  }\n\n  upvoteHandler = (e, id, val, upvoted) => {\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    }\n    const url = 'http://localhost:8000/api/upvote'\n    const user = localStorage.getItem('userid')\n    const post = id\n    let bodyFormData = new FormData()\n    bodyFormData.set('user', user)\n    bodyFormData.set('post', post)\n\n    console.log(user)\n    console.log(post)\n    axios\n      .post(url, bodyFormData, { headers })\n      .then(result => {\n        // this.setState({ posts: result.data });\n\n        console.log(result.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n      window.setTimeout(function(){window.location.reload()},400)\n  }\n\n  handleCreatepost = event => {\n    console.log('Bye')\n    this.setState({ createRequested: true })\n  }\n\n  handleCreateLinkChange = event => {\n    this.setState({ createLink: event.target.value })\n  }\n  handleCreateDescriptionChange = event => {\n    this.setState({ createDescription: event.target.value })\n  }\n\n  componentDidMount () {\n    if(!localStorage.getItem(\"isLoggedIn\")){\n      {\n        this.props.history.push(\"/\");  \n      }\n  }\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    }\n    const url =\n      'http://localhost:8000/api/posts?course=' + this.props.match.params.id\n    axios\n      .get(url, { headers })\n      .then(result => {\n        this.setState({ posts: result.data })\n\n        console.log(result.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  render () {\n    //console.log(this.props);\n    return (\n      <div>\n       \n        <div className='container'>\n          <button\n            className='btn btn-primary ' \n            onClick={this.handleCreatepost}\n          >\n            Create Post\n          </button>\n          \n          {this.state.createRequested ? (\n            <div>\n              <br></br>\n              <form onSubmit={this.handleSubmit}>\n                <div className='form-group'>\n                  <div className='form-label-group'>\n                    <input\n                      className={'form-control '}\n                      id='link'\n                      placeholder='Link'\n                      type='text'\n                      name='link'\n                      onChange={this.handleCreateLinkChange}\n                      autoFocus\n                      required\n                    />\n                    <label htmlFor='link'>Link</label>\n                  </div>\n                  <div className='form-label-group'>\n                    <input\n                      className={'form-control '}\n                      id='description'\n                      placeholder='Description'\n                      type='text'\n                      name='description'\n                      onChange={this.handleCreateDescriptionChange}\n                      autoFocus\n                      required\n                    />\n                    <label htmlFor='description'>Description</label>\n                  </div>\n                </div>\n\n                <div className='form-group'>\n                \n                  <button className={this.state.disabled ? 'btn btn-secondary  btn-block disabled'  :'btn btn-primary btn-block active'}  type='submit' style={{width: '10%',marginTop:'20px'}}>\n                    Post &nbsp;&nbsp;&nbsp;\n                  </button>\n                </div>\n              </form>\n            </div>\n          ) : (\n            <div></div>\n          )}\n\n          <br></br>\n          <br></br>\n          {this.state.posts.length == 0 ? (\n            <div>\n              <h2>No Posts Yet</h2>\n            </div>\n          ) : (\n            this.state.posts.map(val => {\n              return (\n                <div className=' container '>\n                  <div className='posts'>\n                  \n                   \n                    <h3>{val.description}</h3>\n\n                    <a target='_blank' href={val.link}>\n                      {val.link}\n                    </a>\n\n                    <h6 style={{color: 'rgba(72, 70, 75, 0.979)'}}>\n                      Posted By:- {val.created_by.full_name} -{' '}\n                      {val.created_by.email}\n                    </h6>\n                    {val.modified_by?\n                    <h6 style={{ textAlign: 'left' ,color: 'rgba(72, 70, 75, 0.979)'}}>\n                    {' '}\n                    Modified at :{' '}\n                    {moment(val.modified_at).format(\n                      'dddd, MMMM Do YYYY, h:mm:ss a'\n                    )}{' '}\n                  </h6>:\n                  <h6 style={{ textAlign: 'left' ,color: 'rgba(72, 70, 75, 0.979)'}}>\n                      {' '}\n                      Posted at :{' '}\n                      {moment(val.created_at).format(\n                        'dddd, MMMM Do YYYY, h:mm:ss a'\n                      )}{' '}\n                    </h6>\n                    }\n                    \n                    <h4>\n                      <button\n                        className={\n                          val.is_already_upvoted\n                            ? 'btn btn-success'\n                            : ' btn btn-secondary'\n                        }\n                        onClick={e =>\n                          this.upvoteHandler(\n                            e,\n                            val.id,\n                            val.upvote_count,\n                            val.is_already_upvoted\n                          )\n                        }\n                        \n                      >Upvote\n                        \n                      </button>\n                      <span></span> Upvote Count- {val.upvote_count}\n                    </h4>\n                  </div>\n                  <br></br>\n                </div>\n              )\n            })\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Posts\n"]},"metadata":{},"sourceType":"module"}