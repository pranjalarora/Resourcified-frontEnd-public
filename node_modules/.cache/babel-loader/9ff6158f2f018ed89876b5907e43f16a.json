{"ast":null,"code":"var _jsxFileName = \"/home/parth/Documents/Github/resourcified-frontend/src/pages/posts.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport moment from 'moment';\nexport class Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      upvote: 0,\n      upvoted: false,\n      posts: []\n    };\n\n    this.postHandler = (e, id) => {\n      console.log(id); // localStorage.setItem(\"branchSelected\",id);\n      //     const url = \"/posts/\" + localStorage.getItem('branchSelected');\n      //     this.props.history.push(url);\n    };\n\n    this.upvoteHandler = e => {\n      const url = \"http://localhost:8000/api/upvote\";\n      axios.get(url, {\n        headers\n      }).then(result => {\n        this.setState({\n          posts: result.data\n        });\n        console.log(result.data);\n      }).catch(error => {\n        console.log(error);\n      }); // if(this.state.upvoted)\n      //   {\n      //     this.setState({upvoted:false});\n      //     this.setState({upvote:this.state.upvote-1});\n      //   }\n      // else {\n      //   if(!val)\n      //     {\n      //       this.setState({upvoted:true});\n      //     this.setState({upvote:1});\n      //     }\n      //   else {\n      //     this.setState({upvoted:true});\n      //     this.setState({upvote:val+1})\n      //   }\n      // }\n    };\n  }\n\n  componentDidMount() {\n    const url = \"http://localhost:8000/api/posts?course=\" + this.props.match.params.id;\n    axios.post(url, {\n      headers\n    }).then(result => {\n      this.setState({\n        posts: result.data\n      });\n      console.log(result.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    //console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-success \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, \"Create Post\"), this.state.posts.length == 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 44\n      }\n    }, \"No Posts Yet\")) : this.state.posts.map(val => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \" container \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"batches\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }\n      }, val.description), /*#__PURE__*/React.createElement(\"a\", {\n        target: \"_blank\",\n        href: val.link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 56\n        }\n      }, \" \", val.link)), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, \"Posted on : \", moment(val.created_at).format(\"dddd, MMMM Do YYYY, h:mm:ss a\"), \" \"), /*#__PURE__*/React.createElement(\"button\", {\n        className: val.is_already_upvoted ? \"btn btn-success\" : \" btn btn-secondary\",\n        onClick: e => this.upvoteHandler(e, val.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }, \"Upvote\"), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, \"Upvote-Count \", this.state.upvoted ? this.state.upvote : val.upvote_count)), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }));\n    })));\n  }\n\n}\nexport default Posts;","map":{"version":3,"sources":["/home/parth/Documents/Github/resourcified-frontend/src/pages/posts.js"],"names":["React","Component","axios","Link","Redirect","moment","Posts","state","upvote","upvoted","posts","postHandler","e","id","console","log","upvoteHandler","url","get","headers","then","result","setState","data","catch","error","componentDidMount","props","match","params","post","render","length","map","val","description","link","created_at","format","is_already_upvoted","upvote_count"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport moment from 'moment';\n\nexport class Posts extends Component {\n  state = {\n    \n    upvote:0,\n    upvoted:false,\n    posts: [],\n  };\n  \n\n  postHandler = (e, id) => {\n    \nconsole.log(id);\n\n\n// localStorage.setItem(\"branchSelected\",id);\n//     const url = \"/posts/\" + localStorage.getItem('branchSelected');\n//     this.props.history.push(url);\n\n\n  }\n\n  upvoteHandler=(e)=>{\n\n\n    const url = \"http://localhost:8000/api/upvote\";\n\n      axios\n        .get(url, { headers })\n        .then((result) => {\n  \n          \n          this.setState({ posts: result.data });\n  \n  \n          console.log(result.data);\n        })\n        .catch((error) => {\n          console.log(error);\n          \n        });\n    // if(this.state.upvoted)\n    //   {\n    //     this.setState({upvoted:false});\n    //     this.setState({upvote:this.state.upvote-1});\n    //   }\n    // else {\n    //   if(!val)\n    //     {\n    //       this.setState({upvoted:true});\n    //     this.setState({upvote:1});\n    //     }\n      \n    //   else {\n    //     this.setState({upvoted:true});\n    //     this.setState({upvote:val+1})\n    //   }\n    // }\n    \n  }\n\n \n  componentDidMount() {\n   \n      const url = \"http://localhost:8000/api/posts?course=\"+this.props.match.params.id;\n      axios\n        .post(url, { headers })\n        .then((result) => {\n  \n          \n          this.setState({ posts: result.data });\n  \n  \n          console.log(result.data);\n        })\n        .catch((error) => {\n          console.log(error);\n          \n        });\n  }\n  \n\n\n\n  render() {\n    //console.log(this.props);\n    return (\n      <div>\n        \n        <div className=\"container\">\n        <button className=\"btn btn-outline-success \" >Create Post</button>\n          {this.state.posts.length==0?<div><h2>No Posts Yet</h2></div>: this.state.posts.map((val) => {\n           \n            return (\n              <div className=\" container \">\n                <div className=\"batches\">\n                  \n                    \n                    <h3>{val.description}</h3>\n                    \n                    <a target=\"_blank\" href={val.link}><h3> {val.link}</h3></a>\n                    <h3>Posted on : {moment(val.created_at).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")} </h3>\n                    \n                    <button className={val.is_already_upvoted?\"btn btn-success\":\" btn btn-secondary\"} onClick={(e)=>this.upvoteHandler(e,val.id)}>Upvote</button>\n                    \n                    <h3>Upvote-Count {this.state.upvoted?this.state.upvote:val.upvote_count}</h3>\n                  \n                </div>\n                <br></br>\n              </div>\n\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}