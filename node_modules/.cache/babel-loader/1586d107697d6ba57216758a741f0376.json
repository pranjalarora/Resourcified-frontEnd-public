{"ast":null,"code":"var _jsxFileName = \"/home/parth/Documents/Github/resourcified-frontend/src/pages/posts.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport moment from 'moment';\nexport class Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      upvote: 0,\n      upvoted: false,\n      posts: []\n    };\n\n    this.postHandler = (e, id) => {\n      console.log(id); // localStorage.setItem(\"branchSelected\",id);\n      //     const url = \"/posts/\" + localStorage.getItem('branchSelected');\n      //     this.props.history.push(url);\n    };\n\n    this.upvoteHandler = (e, val) => {\n      if (this.state.upvoted) {\n        this.setState({\n          upvoted: false\n        });\n        this.setState({\n          upvote: this.state.upvote - 1\n        });\n      } else {\n        if (!val) {\n          this.setState({\n            upvoted: true\n          });\n          this.setState({\n            upvote: 1\n          });\n        } else {\n          this.setState({\n            upvoted: true\n          });\n          this.setState({\n            upvote: val + 1\n          });\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `JWT ${localStorage.getItem(\"token\")}`\n    };\n    const url = \"http://localhost:8000/api/posts?course=\" + this.props.match.params.id;\n    axios.get(url, {\n      headers\n    }).then(result => {\n      this.setState({\n        posts: result.data\n      });\n      console.log(result.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    //console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-success \",\n      onClick: e => this.createPostHandler(e, val.upvote_count),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \"Create Post\"), this.state.posts.map(val => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \" container \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"batches\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }\n      }, val.description), /*#__PURE__*/React.createElement(\"a\", {\n        target: \"_blank\",\n        href: val.link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 56\n        }\n      }, \" \", val.link)), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }, \"Posted on : \", moment(val.created_at).format(\"dddd, MMMM Do YYYY, h:mm:ss a\"), \" \"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-success \",\n        onClick: e => this.upvoteHandler(e, val.upvote_count),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      }, \"Upvote\"), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      }, \"Upvote-Count \", this.state.upvoted ? this.state.upvote : val.upvote_count)), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }));\n    })));\n  }\n\n}\nexport default Posts;","map":{"version":3,"sources":["/home/parth/Documents/Github/resourcified-frontend/src/pages/posts.js"],"names":["React","Component","axios","Link","Redirect","moment","Posts","state","upvote","upvoted","posts","postHandler","e","id","console","log","upvoteHandler","val","setState","componentDidMount","headers","Accept","Authorization","localStorage","getItem","url","props","match","params","get","then","result","data","catch","error","render","createPostHandler","upvote_count","map","description","link","created_at","format"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport moment from 'moment';\n\nexport class Posts extends Component {\n  state = {\n    \n    upvote:0,\n    upvoted:false,\n    posts: [],\n  };\n  \n\n  postHandler = (e, id) => {\n    \nconsole.log(id);\n\n\n// localStorage.setItem(\"branchSelected\",id);\n//     const url = \"/posts/\" + localStorage.getItem('branchSelected');\n//     this.props.history.push(url);\n\n\n  }\n\n  upvoteHandler=(e,val)=>{\n    if(this.state.upvoted)\n      {\n        this.setState({upvoted:false});\n        this.setState({upvote:this.state.upvote-1});\n      }\n    else {\n      if(!val)\n        {\n          this.setState({upvoted:true});\n        this.setState({upvote:1});\n        }\n      \n      else {\n        this.setState({upvoted:true});\n        this.setState({upvote:val+1})\n      }\n    }\n    \n  }\n\n \n  componentDidMount() {\n    const headers = {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`\n  \n      };\n      const url = \"http://localhost:8000/api/posts?course=\"+this.props.match.params.id;\n      axios\n        .get(url, { headers })\n        .then((result) => {\n  \n          \n          this.setState({ posts: result.data });\n  \n  \n          console.log(result.data);\n        })\n        .catch((error) => {\n          console.log(error);\n          \n        });\n  }\n  \n\n\n\n  render() {\n    //console.log(this.props);\n    return (\n      <div>\n        \n        <div className=\"container\">\n        <button className=\"btn btn-outline-success \" onClick={(e) => this.createPostHandler(e, val.upvote_count)}>Create Post</button>\n          {this.state.posts.map((val) => {\n           \n            return (\n              <div className=\" container \">\n                <div className=\"batches\">\n                  \n                    \n                    <h3>{val.description}</h3>\n                    \n                    <a target=\"_blank\" href={val.link}><h3> {val.link}</h3></a>\n                    <h3>Posted on : {moment(val.created_at).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")} </h3>\n                    \n                    <button className=\"btn btn-outline-success \" onClick={(e) => this.upvoteHandler(e, val.upvote_count)}>Upvote</button>\n                    \n                    <h3>Upvote-Count {this.state.upvoted?this.state.upvote:val.upvote_count}</h3>\n                  \n                </div>\n                <br></br>\n              </div>\n\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}