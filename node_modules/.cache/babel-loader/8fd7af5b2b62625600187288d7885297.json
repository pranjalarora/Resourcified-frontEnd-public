{"ast":null,"code":"var _jsxFileName = \"/home/parth/Documents/Github/teacher-pal/src/pages/sidenav.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { BrowserRouter as Router, Route, Link, withRouter } from \"react-router-dom\";\nconst StyledSideNav = styled.div`   \n    position: fixed;     /* Fixed Sidebar (stay in place on scroll and position relative to viewport) */\n    height: 100%;\n    width: 75px;     /* Set the width of the sidebar */\n    z-index: 1;      /* Stay on top of everything */\n    top: 3.4em;      /* Stay at the top */\n    background-color: #222; /* Black */\n    overflow-x: hidden;     /* Disable horizontal scroll */\n    padding-top: 10px;\n`;\nexport default class SideNav extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onItemClick = path => {\n      this.setState({\n        activePath: path\n      });\n    };\n\n    this.state = {\n      activePath: props.location.pathname,\n      items: [{\n        path: '/',\n\n        /* path is used as id to check which NavItem is active basically */\n        name: 'Home',\n        css: 'fa fa-fw fa-home',\n        key: 1\n        /* Key is required, else console throws error. Does this please you Mr. Browser?! */\n\n      }, {\n        path: '/about',\n        name: 'About',\n        css: 'fa fa-fw fa-clock',\n        key: 2\n      }, {\n        path: '/NoMatch',\n        name: 'NoMatch',\n        css: 'fas fa-hashtag',\n        key: 3\n      }]\n    };\n  }\n\n  render() {\n    const {\n      items,\n      activePath\n    } = this.state;\n    return /*#__PURE__*/React.createElement(StyledSideNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, items.map(item => {\n      return /*#__PURE__*/React.createElement(NavItem, {\n        path: item.path,\n        name: item.name,\n        css: item.css,\n        onItemClick: this.onItemClick,\n        active: item.path === activePath,\n        key: item.key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }\n      });\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/parth/Documents/Github/teacher-pal/src/pages/sidenav.js"],"names":["React","styled","BrowserRouter","Router","Route","Link","withRouter","StyledSideNav","div","SideNav","Component","constructor","props","onItemClick","path","setState","activePath","state","location","pathname","items","name","css","key","render","map","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,EAA+CC,UAA/C,QAAiE,kBAAjE;AAEA,MAAMC,aAAa,GAAGN,MAAM,CAACO,GAAI;;;;;;;;;CAAjC;AAWA,eAAe,MAAMC,OAAN,SAAsBT,KAAK,CAACU,SAA5B,CAAsC;AACjDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA2BnBC,WA3BmB,GA2BJC,IAAD,IAAU;AACpB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAEF;AAAd,OAAd;AACH,KA7BkB;;AAEf,SAAKG,KAAL,GAAa;AACTD,MAAAA,UAAU,EAAEJ,KAAK,CAACM,QAAN,CAAeC,QADlB;AAETC,MAAAA,KAAK,EAAE,CACH;AACEN,QAAAA,IAAI,EAAE,GADR;;AACa;AACXO,QAAAA,IAAI,EAAE,MAFR;AAGEC,QAAAA,GAAG,EAAE,kBAHP;AAIEC,QAAAA,GAAG,EAAE;AAAE;;AAJT,OADG,EAOH;AACET,QAAAA,IAAI,EAAE,QADR;AAEEO,QAAAA,IAAI,EAAE,OAFR;AAGEC,QAAAA,GAAG,EAAE,mBAHP;AAIEC,QAAAA,GAAG,EAAE;AAJP,OAPG,EAaH;AACET,QAAAA,IAAI,EAAE,UADR;AAEEO,QAAAA,IAAI,EAAE,SAFR;AAGEC,QAAAA,GAAG,EAAE,gBAHP;AAIEC,QAAAA,GAAG,EAAE;AAJP,OAbG;AAFE,KAAb;AAuBH;;AAMDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEJ,MAAAA,KAAF;AAASJ,MAAAA;AAAT,QAAwB,KAAKC,KAAnC;AACA,wBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQG,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAU;AAChB,0BACI,oBAAC,OAAD;AACI,QAAA,IAAI,EAAEA,IAAI,CAACZ,IADf;AAEI,QAAA,IAAI,EAAEY,IAAI,CAACL,IAFf;AAGI,QAAA,GAAG,EAAEK,IAAI,CAACJ,GAHd;AAII,QAAA,WAAW,EAAE,KAAKT,WAJtB;AAKI,QAAA,MAAM,EAAEa,IAAI,CAACZ,IAAL,KAAcE,UAL1B;AAMI,QAAA,GAAG,EAAEU,IAAI,CAACH,GANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAUH,KAXD,CAFR,CADJ;AAkBH;;AApDgD","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { BrowserRouter as Router, Route, Link, withRouter } from \"react-router-dom\";\n\nconst StyledSideNav = styled.div`   \n    position: fixed;     /* Fixed Sidebar (stay in place on scroll and position relative to viewport) */\n    height: 100%;\n    width: 75px;     /* Set the width of the sidebar */\n    z-index: 1;      /* Stay on top of everything */\n    top: 3.4em;      /* Stay at the top */\n    background-color: #222; /* Black */\n    overflow-x: hidden;     /* Disable horizontal scroll */\n    padding-top: 10px;\n`;\n\nexport default class SideNav extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activePath: props.location.pathname,\n            items: [\n                {\n                  path: '/', /* path is used as id to check which NavItem is active basically */\n                  name: 'Home',\n                  css: 'fa fa-fw fa-home',\n                  key: 1 /* Key is required, else console throws error. Does this please you Mr. Browser?! */\n                },\n                {\n                  path: '/about',\n                  name: 'About',\n                  css: 'fa fa-fw fa-clock',\n                  key: 2\n                },\n                {\n                  path: '/NoMatch',\n                  name: 'NoMatch',\n                  css: 'fas fa-hashtag',\n                  key: 3\n                },\n              ]\n        }\n    }\n\n    onItemClick = (path) => {\n        this.setState({ activePath: path });\n    }\n\n    render() {\n        const { items, activePath } = this.state;\n        return(\n            <StyledSideNav>\n                {\n                    items.map((item) => {\n                        return (\n                            <NavItem \n                                path={item.path}\n                                name={item.name}\n                                css={item.css}\n                                onItemClick={this.onItemClick}\n                                active={item.path === activePath}\n                                key={item.key}\n                            />\n                        );\n                    })\n                }\n            </StyledSideNav>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}