{"ast":null,"code":"var _jsxFileName = \"/home/parth/Documents/Github/resourcified-frontend/src/pages/register.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport configData from './config.json';\nexport default class Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      name: '',\n      email: '',\n      password: '',\n      redirect: false,\n      authError: false,\n      isLoading: false,\n      instituteName: '',\n      instituteId: 0,\n      institutes: [],\n      branches: [],\n      branchId: 0\n    };\n\n    this.handleEmailChange = event => {\n      // console.log(this.state.role);\n      this.setState({\n        email: event.target.value\n      });\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.handlePwdChange = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.handleNameChange = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.handleInstitueChange = event => {\n      // console.log();\n      // console.log(event.target.value);\n      // this.setState({ instituteName: event.target.value });\n      this.setState({\n        instituteId: event.target.value\n      });\n      this.handleBranchChange(event);\n    };\n\n    this.handleBranchChange = event => {\n      const headers = {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      };\n      const url = `${configData.SERVER_URL}api/branches?institute=` + event.target.value;\n      axios.get(url, {\n        headers\n      }).then(result => {\n        this.setState({\n          branches: result.data\n        }); // console.log(result.data);\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          authError: true,\n          isLoading: false\n        });\n      }); // this.setState({ branch: event.target.value });\n      // console.log(this.state.branch);\n    };\n\n    this.handleBranchChanged = event => {\n      this.setState({\n        branchId: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        isLoading: true\n      });\n      const url = `${configData.SERVER_URL}api/signup`;\n      const email = this.state.email;\n      const role = 'student';\n      const password = this.state.password;\n      const full_name = this.state.name;\n      const username = this.state.username;\n      const branch = this.state.branchId;\n      const institute = this.state.instituteId;\n      let bodyFormData = new FormData();\n      bodyFormData.set('role', role);\n      bodyFormData.set('email', email);\n      bodyFormData.set('full_name', full_name);\n      bodyFormData.set('username', username);\n      bodyFormData.set('password', password);\n      bodyFormData.set('branch', branch);\n      bodyFormData.set('institute', institute); // console.log(institute)\n      // console.log(branch)\n\n      axios.post(url, bodyFormData).then(result => {\n        this.setState({\n          isLoading: false\n        });\n\n        if (result.data.status !== 'fail') {\n          this.setState({\n            redirect: true,\n            authError: false\n          });\n        } else {\n          this.setState({\n            redirect: false,\n            authError: true\n          });\n        } // console.log(result)\n\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          authError: true,\n          isLoading: false\n        });\n      });\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 14\n          }\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    };\n    const url = `${configData.SERVER_URL}api/institutes`;\n    axios.get(url, {\n      headers\n    }).then(result => {\n      // if (result.data.status !== \"fail\") {\n      //   this.setState({ redirect: true, authError: false });\n      // } else {\n      //   this.setState({ redirect: false, authError: true });\n      // }\n      this.setState({\n        institutes: result.data\n      }); // console.log(result.data);\n    }).catch(error => {\n      console.log(error);\n      this.setState({\n        authError: true,\n        isLoading: false\n      });\n    });\n  } //if(localStorage.getItem(\"isLoggedIn\")!=NULL & localStorage.getItem(\"isLoggedIn\")==true)\n\n\n  render() {\n    const isLoading = this.state.isLoading;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-login mx-auto mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header colour-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inputName\",\n      className: \"form-control\",\n      placeholder: \"name\",\n      name: \"name\",\n      onChange: this.handleNameChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"inputName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }, \"Full Name\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"inputEmail\",\n      className: 'form-control ' + (this.state.authError ? 'is-invalid' : ''),\n      placeholder: \"Email address\",\n      type: \"text\",\n      name: \"email\",\n      onChange: this.handleEmailChange,\n      autoFocus: true,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"inputEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }, \"Please provide a valid Email. or Email Exist\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      id: \"inputPassword\",\n      placeholder: \"******\",\n      name: \"password\",\n      onChange: this.handlePwdChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"inputPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 19\n      }\n    }, \"Password\"))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"institute\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, \"Institute\"), /*#__PURE__*/React.createElement(\"select\", {\n      reequired: true,\n      class: \"custom-select\",\n      id: \"institute\",\n      name: \"institute\",\n      onChange: this.handleInstitueChange,\n      value: this.state.instituteId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    }, \"Choose...\"), this.state.institutes.map(val => /*#__PURE__*/React.createElement(\"option\", {\n      value: val.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, val.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"institute\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }, \"Branches\"), /*#__PURE__*/React.createElement(\"select\", {\n      reequired: true,\n      class: \"custom-select\",\n      id: \"branch\",\n      name: \"branch\",\n      onChange: this.handleBranchChanged,\n      value: this.state.branchId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 19\n      }\n    }, \"Choose...\"), this.state.branches.map(val => /*#__PURE__*/React.createElement(\"option\", {\n      value: val.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }\n    }, val.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      type: \"submit\",\n      disabled: this.state.isLoading ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    }, \"Register \\xA0\\xA0\\xA0\", isLoading ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"spinner-border spinner-border-sm\",\n      role: \"status\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"d-block small mt-3\",\n      to: '/login',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 15\n      }\n    }, \"Login Your Account\")))), this.renderRedirect());\n  }\n\n}","map":{"version":3,"sources":["/home/parth/Documents/Github/resourcified-frontend/src/pages/register.js"],"names":["React","Component","axios","Link","Redirect","configData","Register","state","username","name","email","password","redirect","authError","isLoading","instituteName","instituteId","institutes","branches","branchId","handleEmailChange","event","setState","target","value","handlePwdChange","handleNameChange","handleInstitueChange","handleBranchChange","headers","Accept","url","SERVER_URL","get","then","result","data","catch","error","console","log","handleBranchChanged","handleSubmit","preventDefault","role","full_name","branch","institute","bodyFormData","FormData","set","post","status","renderRedirect","componentDidMount","render","map","val","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,eAAe,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC9CM,KAD8C,GACtC;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINC,MAAAA,QAAQ,EAAE,EAJJ;AAKNC,MAAAA,QAAQ,EAAE,KALJ;AAMNC,MAAAA,SAAS,EAAE,KANL;AAONC,MAAAA,SAAS,EAAE,KAPL;AAQNC,MAAAA,aAAa,EAAE,EART;AASNC,MAAAA,WAAW,EAAE,CATP;AAUNC,MAAAA,UAAU,EAAE,EAVN;AAWNC,MAAAA,QAAQ,EAAE,EAXJ;AAYNC,MAAAA,QAAQ,EAAE;AAZJ,KADsC;;AAAA,SAyC9CC,iBAzC8C,GAyC1BC,KAAK,IAAI;AAC3B;AACA,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,KAAK,EAAEW,KAAK,CAACE,MAAN,CAAaC;AAAtB,OAAd;AACA,WAAKF,QAAL,CAAc;AAAEd,QAAAA,QAAQ,EAAEa,KAAK,CAACE,MAAN,CAAaC;AAAzB,OAAd;AACD,KA7C6C;;AAAA,SA8C9CC,eA9C8C,GA8C5BJ,KAAK,IAAI;AACzB,WAAKC,QAAL,CAAc;AAAEX,QAAAA,QAAQ,EAAEU,KAAK,CAACE,MAAN,CAAaC;AAAzB,OAAd;AACD,KAhD6C;;AAAA,SAiD9CE,gBAjD8C,GAiD3BL,KAAK,IAAI;AAC1B,WAAKC,QAAL,CAAc;AAAEb,QAAAA,IAAI,EAAEY,KAAK,CAACE,MAAN,CAAaC;AAArB,OAAd;AACD,KAnD6C;;AAAA,SAqD9CG,oBArD8C,GAqDvBN,KAAK,IAAI;AAC9B;AACA;AACA;AACA,WAAKC,QAAL,CAAc;AAAEN,QAAAA,WAAW,EAAEK,KAAK,CAACE,MAAN,CAAaC;AAA5B,OAAd;AACA,WAAKI,kBAAL,CAAwBP,KAAxB;AACD,KA3D6C;;AAAA,SA6D9CO,kBA7D8C,GA6DzBP,KAAK,IAAI;AAC5B,YAAMQ,OAAO,GAAG;AACd,wBAAgB,kBADF;AAEdC,QAAAA,MAAM,EAAE;AAFM,OAAhB;AAIA,YAAMC,GAAG,GACN,GAAE1B,UAAU,CAAC2B,UAAW,yBAAzB,GAAoDX,KAAK,CAACE,MAAN,CAAaC,KADnE;AAEAtB,MAAAA,KAAK,CACF+B,GADH,CACOF,GADP,EACY;AAAEF,QAAAA;AAAF,OADZ,EAEGK,IAFH,CAEQC,MAAM,IAAI;AACd,aAAKb,QAAL,CAAc;AAAEJ,UAAAA,QAAQ,EAAEiB,MAAM,CAACC;AAAnB,SAAd,EADc,CAGd;AACD,OANH,EAOGC,KAPH,CAOSC,KAAK,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAKhB,QAAL,CAAc;AAAET,UAAAA,SAAS,EAAE,IAAb;AAAmBC,UAAAA,SAAS,EAAE;AAA9B,SAAd;AACD,OAVH,EAP4B,CAkB5B;AACA;AACD,KAjF6C;;AAAA,SAmF9C2B,mBAnF8C,GAmFxBpB,KAAK,IAAI;AAC7B,WAAKC,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAAzB,OAAd;AACD,KArF6C;;AAAA,SAsF9CkB,YAtF8C,GAsF/BrB,KAAK,IAAI;AACtBA,MAAAA,KAAK,CAACsB,cAAN;AACA,WAAKrB,QAAL,CAAc;AAAER,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,YAAMiB,GAAG,GAAI,GAAE1B,UAAU,CAAC2B,UAAW,YAArC;AACA,YAAMtB,KAAK,GAAG,KAAKH,KAAL,CAAWG,KAAzB;AACA,YAAMkC,IAAI,GAAG,SAAb;AACA,YAAMjC,QAAQ,GAAG,KAAKJ,KAAL,CAAWI,QAA5B;AACA,YAAMkC,SAAS,GAAG,KAAKtC,KAAL,CAAWE,IAA7B;AACA,YAAMD,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAA5B;AACA,YAAMsC,MAAM,GAAG,KAAKvC,KAAL,CAAWY,QAA1B;AACA,YAAM4B,SAAS,GAAG,KAAKxC,KAAL,CAAWS,WAA7B;AACA,UAAIgC,YAAY,GAAG,IAAIC,QAAJ,EAAnB;AACAD,MAAAA,YAAY,CAACE,GAAb,CAAiB,MAAjB,EAAyBN,IAAzB;AACAI,MAAAA,YAAY,CAACE,GAAb,CAAiB,OAAjB,EAA0BxC,KAA1B;AAEAsC,MAAAA,YAAY,CAACE,GAAb,CAAiB,WAAjB,EAA8BL,SAA9B;AACAG,MAAAA,YAAY,CAACE,GAAb,CAAiB,UAAjB,EAA6B1C,QAA7B;AACAwC,MAAAA,YAAY,CAACE,GAAb,CAAiB,UAAjB,EAA6BvC,QAA7B;AACAqC,MAAAA,YAAY,CAACE,GAAb,CAAiB,QAAjB,EAA2BJ,MAA3B;AACAE,MAAAA,YAAY,CAACE,GAAb,CAAiB,WAAjB,EAA8BH,SAA9B,EAnBsB,CAqBtB;AACA;;AACA7C,MAAAA,KAAK,CACFiD,IADH,CACQpB,GADR,EACaiB,YADb,EAEGd,IAFH,CAEQC,MAAM,IAAI;AACd,aAAKb,QAAL,CAAc;AAAER,UAAAA,SAAS,EAAE;AAAb,SAAd;;AACA,YAAIqB,MAAM,CAACC,IAAP,CAAYgB,MAAZ,KAAuB,MAA3B,EAAmC;AACjC,eAAK9B,QAAL,CAAc;AAAEV,YAAAA,QAAQ,EAAE,IAAZ;AAAkBC,YAAAA,SAAS,EAAE;AAA7B,WAAd;AACD,SAFD,MAEO;AACL,eAAKS,QAAL,CAAc;AAAEV,YAAAA,QAAQ,EAAE,KAAZ;AAAmBC,YAAAA,SAAS,EAAE;AAA9B,WAAd;AACD,SANa,CAQd;;AACD,OAXH,EAYGwB,KAZH,CAYSC,KAAK,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAKhB,QAAL,CAAc;AAAET,UAAAA,SAAS,EAAE,IAAb;AAAmBC,UAAAA,SAAS,EAAE;AAA9B,SAAd;AACD,OAfH;AAgBD,KA7H6C;;AAAA,SA+H9CuC,cA/H8C,GA+H7B,MAAM;AACrB,UAAI,KAAK9C,KAAL,CAAWK,QAAf,EAAyB;AACvB,4BAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KAnI6C;AAAA;;AAgB9C0C,EAAAA,iBAAiB,GAAI;AACnB,UAAMzB,OAAO,GAAG;AACd,sBAAgB,kBADF;AAEdC,MAAAA,MAAM,EAAE;AAFM,KAAhB;AAIA,UAAMC,GAAG,GAAI,GAAE1B,UAAU,CAAC2B,UAAW,gBAArC;AACA9B,IAAAA,KAAK,CACF+B,GADH,CACOF,GADP,EACY;AAAEF,MAAAA;AAAF,KADZ,EAEGK,IAFH,CAEQC,MAAM,IAAI;AACd;AACA;AACA;AACA;AACA;AACA,WAAKb,QAAL,CAAc;AAAEL,QAAAA,UAAU,EAAEkB,MAAM,CAACC;AAArB,OAAd,EANc,CAQd;AACD,KAXH,EAYGC,KAZH,CAYSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAKhB,QAAL,CAAc;AAAET,QAAAA,SAAS,EAAE,IAAb;AAAmBC,QAAAA,SAAS,EAAE;AAA9B,OAAd;AACD,KAfH;AAgBD,GAtC6C,CAuC9C;;;AA8FAyC,EAAAA,MAAM,GAAI;AACR,UAAMzC,SAAS,GAAG,KAAKP,KAAL,CAAWO,SAA7B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,QAAQ,EAAE,KAAK4B,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,WAFL;AAGE,MAAA,SAAS,EAAC,cAHZ;AAIE,MAAA,WAAW,EAAC,MAJd;AAKE,MAAA,IAAI,EAAC,MALP;AAME,MAAA,QAAQ,EAAE,KAAKhB,gBANjB;AAOE,MAAA,QAAQ,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAUE;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVF,CADF,CADF,eAgBE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,EAAE,EAAC,YADL;AAEE,MAAA,SAAS,EACP,mBACC,KAAKnB,KAAL,CAAWM,SAAX,GAAuB,YAAvB,GAAsC,EADvC,CAHJ;AAME,MAAA,WAAW,EAAC,eANd;AAOE,MAAA,IAAI,EAAC,MAPP;AAQE,MAAA,IAAI,EAAC,OARP;AASE,MAAA,QAAQ,EAAE,KAAKO,iBATjB;AAUE,MAAA,SAAS,MAVX;AAWE,MAAA,QAAQ,MAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAcE;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAdF,eAeE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAfF,CADF,CAhBF,eAqCE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,EAAE,EAAC,eAHL;AAIE,MAAA,WAAW,EAAC,QAJd;AAKE,MAAA,IAAI,EAAC,UALP;AAME,MAAA,QAAQ,EAAE,KAAKK,eANjB;AAOE,MAAA,QAAQ,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAUE;AAAO,MAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,CADF,CArCF,eAoDE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,GAAG,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AACE,MAAA,SAAS,MADX;AAEE,MAAA,KAAK,EAAC,eAFR;AAGE,MAAA,EAAE,EAAC,WAHL;AAIE,MAAA,IAAI,EAAC,WAJP;AAKE,MAAA,QAAQ,EAAE,KAAKE,oBALjB;AAME,MAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWS,WANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,KAAK,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF,EAWG,KAAKT,KAAL,CAAWU,UAAX,CAAsBuC,GAAtB,CAA0BC,GAAG,iBAC5B;AAAQ,MAAA,KAAK,EAAEA,GAAG,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBD,GAAG,CAAChD,IAA5B,CADD,CAXH,CAFF,CApDF,eAyEE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,GAAG,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,MAAA,SAAS,MADX;AAEE,MAAA,KAAK,EAAC,eAFR;AAGE,MAAA,EAAE,EAAC,QAHL;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,QAAQ,EAAE,KAAKgC,mBALjB;AAME,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWY,QANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,KAAK,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF,EAWG,KAAKZ,KAAL,CAAWW,QAAX,CAAoBsC,GAApB,CAAwBC,GAAG,iBAC1B;AAAQ,MAAA,KAAK,EAAEA,GAAG,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBD,GAAG,CAAChD,IAA5B,CADD,CAXH,CAFF,CAzEF,eA6FE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,2BADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWO,SAAX,GAAuB,IAAvB,GAA8B,KAH1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAMGA,SAAS,gBACR;AACE,MAAA,SAAS,EAAC,kCADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,qBAAY,MAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADQ,gBAOR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,CADF,CA7FF,CADF,eAiHE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAqC,MAAA,EAAE,EAAE,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CAjHF,CAFF,CADF,EA2HG,KAAKuC,cAAL,EA3HH,CADF;AA+HD;;AAtQ6C","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link, Redirect } from 'react-router-dom'\nimport configData from './config.json'\n\nexport default class Register extends Component {\n  state = {\n    username: '',\n    name: '',\n    email: '',\n    password: '',\n    redirect: false,\n    authError: false,\n    isLoading: false,\n    instituteName: '',\n    instituteId: 0,\n    institutes: [],\n    branches: [],\n    branchId: 0\n  }\n\n  componentDidMount () {\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    }\n    const url = `${configData.SERVER_URL}api/institutes`\n    axios\n      .get(url, { headers })\n      .then(result => {\n        // if (result.data.status !== \"fail\") {\n        //   this.setState({ redirect: true, authError: false });\n        // } else {\n        //   this.setState({ redirect: false, authError: true });\n        // }\n        this.setState({ institutes: result.data })\n\n        // console.log(result.data);\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({ authError: true, isLoading: false })\n      })\n  }\n  //if(localStorage.getItem(\"isLoggedIn\")!=NULL & localStorage.getItem(\"isLoggedIn\")==true)\n\n  handleEmailChange = event => {\n    // console.log(this.state.role);\n    this.setState({ email: event.target.value })\n    this.setState({ username: event.target.value })\n  }\n  handlePwdChange = event => {\n    this.setState({ password: event.target.value })\n  }\n  handleNameChange = event => {\n    this.setState({ name: event.target.value })\n  }\n\n  handleInstitueChange = event => {\n    // console.log();\n    // console.log(event.target.value);\n    // this.setState({ instituteName: event.target.value });\n    this.setState({ instituteId: event.target.value })\n    this.handleBranchChange(event)\n  }\n\n  handleBranchChange = event => {\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    }\n    const url =\n      `${configData.SERVER_URL}api/branches?institute=` + event.target.value\n    axios\n      .get(url, { headers })\n      .then(result => {\n        this.setState({ branches: result.data })\n\n        // console.log(result.data);\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({ authError: true, isLoading: false })\n      })\n    // this.setState({ branch: event.target.value });\n    // console.log(this.state.branch);\n  }\n\n  handleBranchChanged = event => {\n    this.setState({ branchId: event.target.value })\n  }\n  handleSubmit = event => {\n    event.preventDefault()\n    this.setState({ isLoading: true })\n    const url = `${configData.SERVER_URL}api/signup`\n    const email = this.state.email\n    const role = 'student'\n    const password = this.state.password\n    const full_name = this.state.name\n    const username = this.state.username\n    const branch = this.state.branchId\n    const institute = this.state.instituteId\n    let bodyFormData = new FormData()\n    bodyFormData.set('role', role)\n    bodyFormData.set('email', email)\n\n    bodyFormData.set('full_name', full_name)\n    bodyFormData.set('username', username)\n    bodyFormData.set('password', password)\n    bodyFormData.set('branch', branch)\n    bodyFormData.set('institute', institute)\n\n    // console.log(institute)\n    // console.log(branch)\n    axios\n      .post(url, bodyFormData)\n      .then(result => {\n        this.setState({ isLoading: false })\n        if (result.data.status !== 'fail') {\n          this.setState({ redirect: true, authError: false })\n        } else {\n          this.setState({ redirect: false, authError: true })\n        }\n\n        // console.log(result)\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({ authError: true, isLoading: false })\n      })\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to='/login' />\n    }\n  }\n\n  render () {\n    const isLoading = this.state.isLoading\n    return (\n      <div className='container'>\n        <div className='card card-login mx-auto mt-5'>\n          <div className='card-header colour-green'>Register</div>\n          <div className='card-body'>\n            <form onSubmit={this.handleSubmit}>\n              <div className='form-group'>\n                <div className='form-label-group'>\n                  <input\n                    type='text'\n                    id='inputName'\n                    className='form-control'\n                    placeholder='name'\n                    name='name'\n                    onChange={this.handleNameChange}\n                    required\n                  />\n                  <label htmlFor='inputName'>Full Name</label>\n                </div>\n              </div>\n\n              <div className='form-group'>\n                <div className='form-label-group'>\n                  <input\n                    id='inputEmail'\n                    className={\n                      'form-control ' +\n                      (this.state.authError ? 'is-invalid' : '')\n                    }\n                    placeholder='Email address'\n                    type='text'\n                    name='email'\n                    onChange={this.handleEmailChange}\n                    autoFocus\n                    required\n                  />\n                  <label htmlFor='inputEmail'>Email address</label>\n                  <div className='invalid-feedback'>\n                    Please provide a valid Email. or Email Exist\n                  </div>\n                </div>\n              </div>\n              <div className='form-group'>\n                <div className='form-label-group'>\n                  <input\n                    type='password'\n                    className='form-control'\n                    id='inputPassword'\n                    placeholder='******'\n                    name='password'\n                    onChange={this.handlePwdChange}\n                    required\n                  />\n                  <label htmlFor='inputPassword'>Password</label>\n                </div>\n              </div>\n\n              <div class='form-group'>\n                <label for='institute'>Institute</label>\n                <select\n                  reequired\n                  class='custom-select'\n                  id='institute'\n                  name='institute'\n                  onChange={this.handleInstitueChange}\n                  value={this.state.instituteId}\n                >\n                  <option selected value={0}>\n                    Choose...\n                  </option>\n                  {this.state.institutes.map(val => (\n                    <option value={val.id}>{val.name}</option>\n                  ))}\n\n                  {/* {console.log(this.state.instituteId)} */}\n                </select>\n              </div>\n\n              <div class='form-group'>\n                <label for='institute'>Branches</label>\n                <select\n                  reequired\n                  class='custom-select'\n                  id='branch'\n                  name='branch'\n                  onChange={this.handleBranchChanged}\n                  value={this.state.branchId}\n                >\n                  <option selected value={0}>\n                    Choose...\n                  </option>\n                  {this.state.branches.map(val => (\n                    <option value={val.id}>{val.name}</option>\n                  ))}\n                  {/* {console.log(this.state.branch)} */}\n                </select>\n              </div>\n\n              <div className='form-group'>\n                <button\n                  className='btn btn-primary btn-block'\n                  type='submit'\n                  disabled={this.state.isLoading ? true : false}\n                >\n                  Register &nbsp;&nbsp;&nbsp;\n                  {isLoading ? (\n                    <span\n                      className='spinner-border spinner-border-sm'\n                      role='status'\n                      aria-hidden='true'\n                    ></span>\n                  ) : (\n                    <span></span>\n                  )}\n                </button>\n              </div>\n            </form>\n            <div className='text-center'>\n              <Link className='d-block small mt-3' to={'/login'}>\n                Login Your Account\n              </Link>\n            </div>\n          </div>\n        </div>\n        {this.renderRedirect()}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}