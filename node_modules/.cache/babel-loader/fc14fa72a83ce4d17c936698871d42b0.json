{"ast":null,"code":"var _jsxFileName = \"/home/parth/Documents/Github/resourcified-frontend/src/pages/branches.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport moment from 'moment';\nexport class AllBatches extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      branch: \"\",\n      institutes: []\n    };\n\n    this.batchhandler = (e, id, name) => {\n      localStorage.setItem(\"batchName\", name);\n      localStorage.setItem(\"isbatch\", id);\n      const url = \"/batchlist/\" + localStorage.getItem('isbatch');\n      this.props.history.push(url);\n    };\n\n    this.handleGet = event => {\n      event.preventDefault();\n      const headers = {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`\n      }; // Typical usage (don't forget to compare props):\n\n      console.log(this.props);\n      const url = \"http://localhost:8000/api/batch?created_by=\" + this.state.created_by;\n      console.log(url);\n      axios.get(url, {\n        headers\n      }).then(result => {\n        console.log(result.data);\n        this.setState({\n          data: result.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handlePost = event => {\n      console.log(localStorage.getItem(\"role\"));\n      console.log(localStorage.getItem(\"userid\"));\n      event.preventDefault();\n      const headers = {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`\n      }; // Typical usage (don't forget to compare props):\n      //console.log(this.props);\n\n      const url = \"http://localhost:8000/api/batch\" + this.props.location.search; //console.log(url);\n\n      const name = this.state.name;\n      const meet = this.state.meet;\n      console.log(name, meet); //const created_by = this.state.created_by;\n\n      let bodyFormData = new FormData();\n      bodyFormData.set(\"name\", name);\n      bodyFormData.set(\"meet_link\", meet); // const body=JSON.stringify({\n      //   name:this.state.name,\n      //   meet_link:this.state.meet,\n      // })\n      //console.log(body);\n      //bodyFormData.set(\"created_by\", created_by);\n      //console.log(\"cretaed\", created_by);\n      //console.log(typeof meet);\n\n      axios.post(url, bodyFormData, {\n        headers\n      }).then(result => {\n        console.log(result.data);\n      }).catch(error => {\n        console.log(error);\n      });\n      window.location.reload();\n    };\n  }\n\n  componentDidMount() {\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    };\n    const url = \"http://localhost:8000/api/institutes\";\n    axios.get(url, {\n      headers\n    }).then(result => {\n      this.setState({\n        institutes: result.data\n      });\n      console.log(result.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    //console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-login mx-auto mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, \"Create Batch\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handlePost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      className: \"form-control\",\n      placeholder: \"Name\",\n      name: \"name\",\n      onChange: this.handleNameChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, \"Name\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"url\",\n      id: \"meet\",\n      className: \"form-control\",\n      placeholder: \"Meet Link\",\n      name: \"meet\",\n      onChange: this.handleMeetChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"meet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, \"Meet Link\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }, \"Create batch\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      onClick: this.handleGet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    }, \"Show Batches\"))), this.state.data.map(val => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \" container \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"batches\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-success btn-block\",\n        onClick: e => this.batchhandler(e, val.id, val.name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }\n      }, \"Batch Name:\", val.name), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }\n      }, \"Created At: \", moment(val.created_at).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }\n      }, \"Modified At:\", moment(val.modified_at).format(\"dddd, MMMM Do YYYY, h:mm:ss a\"))), /*#__PURE__*/React.createElement(\"a\", {\n        target: \"_blank\",\n        href: val.meet_link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-primary btn-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 59\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 113\n        }\n      }, \"Meet Link: \", val.meet_link)))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }\n      }));\n    })));\n  }\n\n}\nexport default AllBatches;","map":{"version":3,"sources":["/home/parth/Documents/Github/resourcified-frontend/src/pages/branches.js"],"names":["React","Component","axios","Link","Redirect","moment","AllBatches","state","branch","institutes","batchhandler","e","id","name","localStorage","setItem","url","getItem","props","history","push","handleGet","event","preventDefault","headers","Accept","Authorization","console","log","created_by","get","then","result","data","setState","catch","error","handlePost","location","search","meet","bodyFormData","FormData","set","post","window","reload","componentDidMount","render","handleNameChange","handleMeetChange","map","val","created_at","format","modified_at","meet_link"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport moment from 'moment';\n\nexport class AllBatches extends Component {\n  state = {\n    branch:\"\",\n    \n    institutes: [],\n  };\n  \n\n  batchhandler = (e, id,name) => {\n    localStorage.setItem(\"batchName\", name);\n    localStorage.setItem(\"isbatch\", id);\n\n    const url = \"/batchlist/\" + localStorage.getItem('isbatch');\n    this.props.history.push(url);\n\n\n  }\n  componentDidMount() {\n    const headers = {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n  \n      };\n      const url = \"http://localhost:8000/api/institutes\";\n      axios\n        .get(url, { headers })\n        .then((result) => {\n  \n          \n          this.setState({ institutes: result.data });\n  \n  \n          console.log(result.data);\n        })\n        .catch((error) => {\n          console.log(error);\n          \n        });\n  }\n  handleGet = (event) => {\n    event.preventDefault();\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `JWT ${localStorage.getItem(\"token\")}`,\n    };\n    // Typical usage (don't forget to compare props):\n    console.log(this.props);\n    const url =\n      \"http://localhost:8000/api/batch?created_by=\" + this.state.created_by;\n    console.log(url);\n\n    axios\n      .get(url, { headers })\n      .then((result) => {\n        console.log(result.data);\n        this.setState({ data: result.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  handlePost = (event) => {\n    console.log(localStorage.getItem(\"role\"));\n    console.log(localStorage.getItem(\"userid\"));\n    event.preventDefault();\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `JWT ${localStorage.getItem(\"token\")}`,\n    };\n    // Typical usage (don't forget to compare props):\n    //console.log(this.props);\n\n    const url = \"http://localhost:8000/api/batch\" + this.props.location.search;\n    //console.log(url);\n    const name = this.state.name;\n    const meet = this.state.meet;\n    console.log(name, meet);\n    //const created_by = this.state.created_by;\n    let bodyFormData = new FormData();\n\n    bodyFormData.set(\"name\", name);\n    bodyFormData.set(\"meet_link\", meet);\n    // const body=JSON.stringify({\n    //   name:this.state.name,\n    //   meet_link:this.state.meet,\n    // })\n    //console.log(body);\n    //bodyFormData.set(\"created_by\", created_by);\n    //console.log(\"cretaed\", created_by);\n    //console.log(typeof meet);\n    axios\n      .post(url, bodyFormData, { headers })\n      .then((result) => {\n        console.log(result.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    window.location.reload();\n  };\n\n  render() {\n    //console.log(this.props);\n    return (\n      <div>\n\n        <div className=\"container\">\n          <div className=\"card card-login mx-auto mt-5\">\n            <div className=\"card-header\">Create Batch</div>\n            <div className=\"card-body\">\n              <form onSubmit={this.handlePost}>\n                <div className=\"form-group\">\n                  <div className=\"form-label-group\">\n                    <input\n                      type=\"text\"\n                      id=\"name\"\n                      className=\"form-control\"\n                      placeholder=\"Name\"\n                      name=\"name\"\n                      onChange={this.handleNameChange}\n                      required\n                    />\n                    <label htmlFor=\"name\">Name</label>\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <div className=\"form-label-group\">\n                    <input\n                      type=\"url\"\n                      id=\"meet\"\n                      className=\"form-control\"\n                      placeholder=\"Meet Link\"\n                      name=\"meet\"\n                      onChange={this.handleMeetChange}\n                      required\n                    />\n                    <label htmlFor=\"meet\">Meet Link</label>\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\" type=\"submit\">\n                    Create batch\n                  </button>\n                </div>\n              </form>\n            </div>\n            <div className=\"form-group\">\n              <button\n                className=\"btn btn-primary btn-block\"\n                onClick={this.handleGet}\n              >\n                Show Batches\n\n              </button>\n\n            </div>\n\n          </div>\n          {this.state.data.map((val) => {\n            return (\n              <div className=\" container \">\n                <div className=\"batches\">\n                  <button className=\"btn btn-outline-success btn-block\" onClick={(e) => this.batchhandler(e, val.id,val.name)}>\n                    <h3>Batch Name:{val.name}</h3>\n                    <h3>Created At: {moment(val.created_at).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}</h3>\n                    <h3>Modified At:{moment(val.modified_at).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}</h3>\n                  </button>\n                  <a target=\"_blank\" href={val.meet_link}><button className=\"btn btn-outline-primary btn-block\"><h3>Meet Link: {val.meet_link}</h3></button></a>\n                </div>\n                <br></br>\n              </div>\n\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AllBatches;\n"]},"metadata":{},"sourceType":"module"}