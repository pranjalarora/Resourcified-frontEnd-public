{"ast":null,"code":"var _jsxFileName = \"/home/parth/Documents/Github/resourcified-frontend/src/pages/posts.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport moment from 'moment';\nexport class Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      upvote: 0,\n      upvoted: false,\n      posts: [],\n      createRequested: false,\n      createLink: '',\n      createDescription: ''\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const url = 'http://localhost:8000/api/posts';\n      console.log(url);\n      const headers = {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `JWT ${localStorage.getItem('token')}`\n      };\n      const link = this.state.createLink;\n      const description = this.state.createDescription;\n      const course = this.props.match.params.id;\n      let bodyFormData = new FormData();\n      bodyFormData.set('link', link);\n      bodyFormData.set('description', description);\n      bodyFormData.set('course', course);\n      axios.post(url, bodyFormData, {\n        headers\n      }).then(result => {\n        console.log(result.data);\n      }).catch(error => {\n        console.log(error);\n      });\n      window.location.reload();\n    };\n\n    this.upvoteHandler = (e, id, val, upvoted) => {\n      const headers = {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `JWT ${localStorage.getItem('token')}`\n      };\n      const url = 'http://localhost:8000/api/upvote';\n      const user = localStorage.getItem('userid');\n      const post = id;\n      let bodyFormData = new FormData();\n      bodyFormData.set('user', user);\n      bodyFormData.set('post', post);\n      console.log(user);\n      console.log(post);\n      axios.post(url, bodyFormData, {\n        headers\n      }).then(result => {\n        // this.setState({ posts: result.data });\n        console.log(result.data);\n      }).catch(error => {\n        console.log(error);\n      });\n      window.location.reload();\n    };\n\n    this.handleCreatepost = event => {\n      console.log('Bye');\n      this.setState({\n        createRequested: true\n      });\n    };\n\n    this.handleCreateLinkChange = event => {\n      this.setState({\n        createLink: event.target.value\n      });\n    };\n\n    this.handleCreateDescriptionChange = event => {\n      this.setState({\n        createDescription: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    };\n    const url = 'http://localhost:8000/api/posts?course=' + this.props.match.params.id;\n    axios.get(url, {\n      headers\n    }).then(result => {\n      this.setState({\n        posts: result.data\n      });\n      console.log(result.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    //console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-success \",\n      onClick: this.handleCreatepost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, \"Create Post\"), this.state.createRequested ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: 'form-control ',\n      id: \"link\",\n      placeholder: \"Link\",\n      type: \"text\",\n      name: \"link\",\n      onChange: this.handleCreateLinkChange,\n      autoFocus: true,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, \"Link\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: 'form-control ',\n      id: \"description\",\n      placeholder: \"Description\",\n      type: \"text\",\n      name: \"description\",\n      onChange: this.handleCreateDescriptionChange,\n      autoFocus: true,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, \"Description\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    }, \"Post \\xA0\\xA0\\xA0\")))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }), this.state.posts.length == 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }\n    }, \"No Posts Yet\")) : this.state.posts.map(val => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \" container \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"posts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }\n      }, \"Posted By:- \", val.created_by.full_name, \" -\", ' ', val.created_by.email), val.created_at != val.modified_at ? /*#__PURE__*/React.createElement(\"h6\", {\n        style: {\n          textAlign: 'left'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }\n      }, ' ', \"Modified at :\", ' ', moment(val.modified_at).format('dddd, MMMM Do YYYY, h:mm:ss a'), ' ') : /*#__PURE__*/React.createElement(\"h6\", {\n        style: {\n          textAlign: 'left'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 19\n        }\n      }, ' ', \"Posted at :\", ' ', moment(val.created_at).format('dddd, MMMM Do YYYY, h:mm:ss a'), ' '), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }\n      }, val.description), /*#__PURE__*/React.createElement(\"a\", {\n        target: \"_blank\",\n        href: val.link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 23\n        }\n      }, \" \", val.link)), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: val.is_already_upvoted ? 'btn btn-success' : ' btn btn-secondary',\n        onClick: e => this.upvoteHandler(e, val.id, val.upvote_count, val.is_already_upvoted),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 23\n        }\n      }, \"Upvote\"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 23\n        }\n      }), \" Upvote Count- \", val.upvote_count)), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 19\n        }\n      }));\n    })));\n  }\n\n}\nexport default Posts;","map":{"version":3,"sources":["/home/parth/Documents/Github/resourcified-frontend/src/pages/posts.js"],"names":["React","Component","axios","Link","Redirect","moment","Posts","state","upvote","upvoted","posts","createRequested","createLink","createDescription","handleSubmit","event","preventDefault","url","console","log","headers","Accept","Authorization","localStorage","getItem","link","description","course","props","match","params","id","bodyFormData","FormData","set","post","then","result","data","catch","error","window","location","reload","upvoteHandler","e","val","user","handleCreatepost","setState","handleCreateLinkChange","target","value","handleCreateDescriptionChange","componentDidMount","get","render","length","map","created_by","full_name","email","created_at","modified_at","textAlign","format","is_already_upvoted","upvote_count"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link, Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nexport class Posts extends Component {\n  state = {\n    upvote: 0,\n    upvoted: false,\n    posts: [],\n    createRequested: false,\n    createLink: '',\n    createDescription: ''\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    const url = 'http://localhost:8000/api/posts'\n    console.log(url)\n\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    }\n    const link = this.state.createLink\n    const description = this.state.createDescription\n    const course = this.props.match.params.id\n    let bodyFormData = new FormData()\n    bodyFormData.set('link', link)\n    bodyFormData.set('description', description)\n    bodyFormData.set('course', course)\n\n    axios\n      .post(url, bodyFormData, { headers })\n      .then(result => {\n        console.log(result.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    window.location.reload()\n  }\n\n  upvoteHandler = (e, id, val, upvoted) => {\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    }\n    const url = 'http://localhost:8000/api/upvote'\n    const user = localStorage.getItem('userid')\n    const post = id\n    let bodyFormData = new FormData()\n    bodyFormData.set('user', user)\n    bodyFormData.set('post', post)\n\n    console.log(user)\n    console.log(post)\n    axios\n      .post(url, bodyFormData, { headers })\n      .then(result => {\n        // this.setState({ posts: result.data });\n\n        console.log(result.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    window.location.reload()\n  }\n\n  handleCreatepost = event => {\n    console.log('Bye')\n    this.setState({ createRequested: true })\n  }\n\n  handleCreateLinkChange = event => {\n    this.setState({ createLink: event.target.value })\n  }\n  handleCreateDescriptionChange = event => {\n    this.setState({ createDescription: event.target.value })\n  }\n\n  componentDidMount () {\n    const headers = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `JWT ${localStorage.getItem('token')}`\n    }\n    const url =\n      'http://localhost:8000/api/posts?course=' + this.props.match.params.id\n    axios\n      .get(url, { headers })\n      .then(result => {\n        this.setState({ posts: result.data })\n\n        console.log(result.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  render () {\n    //console.log(this.props);\n    return (\n      <div>\n        <div className='container'>\n          <button\n            className='btn btn-outline-success '\n            onClick={this.handleCreatepost}\n          >\n            Create Post\n          </button>\n\n          {this.state.createRequested ? (\n            <div>\n              <form onSubmit={this.handleSubmit}>\n                <div className='form-group'>\n                  <div className='form-label-group'>\n                    <input\n                      className={'form-control '}\n                      id='link'\n                      placeholder='Link'\n                      type='text'\n                      name='link'\n                      onChange={this.handleCreateLinkChange}\n                      autoFocus\n                      required\n                    />\n                    <label htmlFor='link'>Link</label>\n                  </div>\n\n                  <div className='form-label-group'>\n                    <input\n                      className={'form-control '}\n                      id='description'\n                      placeholder='Description'\n                      type='text'\n                      name='description'\n                      onChange={this.handleCreateDescriptionChange}\n                      autoFocus\n                      required\n                    />\n                    <label htmlFor='description'>Description</label>\n                  </div>\n                </div>\n\n                <div className='form-group'>\n                  <button className='btn btn-primary btn-block' type='submit'>\n                    Post &nbsp;&nbsp;&nbsp;\n                  </button>\n                </div>\n              </form>\n            </div>\n          ) : (\n            <div></div>\n          )}\n\n          <br></br>\n          <br></br>\n          {this.state.posts.length == 0 ? (\n            <div>\n              <h2>No Posts Yet</h2>\n            </div>\n          ) : (\n            this.state.posts.map(val => {\n              return (\n                <div className=' container '>\n                  <div className='posts'>\n                  \n                    <h4>\n                      Posted By:- {val.created_by.full_name} -{' '}\n                      {val.created_by.email}\n                    </h4>\n                    {val.created_at!=val.modified_at?\n                    <h6 style={{ textAlign: 'left' }}>\n                    {' '}\n                    Modified at :{' '}\n                    {moment(val.modified_at).format(\n                      'dddd, MMMM Do YYYY, h:mm:ss a'\n                    )}{' '}\n                  </h6>:\n                  <h6 style={{ textAlign: 'left' }}>\n                      {' '}\n                      Posted at :{' '}\n                      {moment(val.created_at).format(\n                        'dddd, MMMM Do YYYY, h:mm:ss a'\n                      )}{' '}\n                    </h6>\n                    }\n                    \n                    <h3>{val.description}</h3>\n\n                    <a target='_blank' href={val.link}>\n                      <h3> {val.link}</h3>\n                    </a>\n\n                    <h4>\n                      <button\n                        className={\n                          val.is_already_upvoted\n                            ? 'btn btn-success'\n                            : ' btn btn-secondary'\n                        }\n                        onClick={e =>\n                          this.upvoteHandler(\n                            e,\n                            val.id,\n                            val.upvote_count,\n                            val.is_already_upvoted\n                          )\n                        }\n                      >\n                        Upvote\n                      </button>\n                      <span></span> Upvote Count- {val.upvote_count}\n                    </h4>\n                  </div>\n                  <br></br>\n                </div>\n              )\n            })\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Posts\n"]},"metadata":{},"sourceType":"module"}