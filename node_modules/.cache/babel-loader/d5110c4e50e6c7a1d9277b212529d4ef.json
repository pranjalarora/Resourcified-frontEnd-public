{"ast":null,"code":"var _jsxFileName = \"/home/parth/Documents/Github/resourcified-frontend/src/pages/posts.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport moment from 'moment';\nexport class Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      upvote: 0,\n      upvoted: false,\n      posts: [],\n      createRequested: false,\n      createLink: \"\",\n      createDescription: \"\"\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const url = \"http://localhost:8000/api/posts?course=\" + this.props.match.params.id;\n      console.log(url);\n      const headers = {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`\n      };\n      const link = this.state.createLink;\n      const description = this.state.createDescription;\n      let bodyFormData = new FormData();\n      bodyFormData.set(\"link\", link);\n      bodyFormData.set(\"description\", description);\n      axios.post(url, bodyFormData, {\n        headers\n      }).then(result => {\n        console.log(result.data);\n      }).catch(error => {\n        console.log(error);\n      });\n      window.location.reload();\n    };\n\n    this.upvoteHandler = (e, id, val) => {\n      const headers = {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`\n      };\n      const url = \"http://localhost:8000/api/upvote\";\n      const user = localStorage.getItem(\"userid\");\n      const post = id;\n      let bodyFormData = new FormData();\n      bodyFormData.set(\"user\", user);\n      bodyFormData.set(\"post\", post);\n      console.log(user);\n      console.log(post);\n      axios.post(url, bodyFormData, {\n        headers\n      }).then(result => {\n        // this.setState({ posts: result.data });\n        console.log(result.data);\n      }).catch(error => {\n        console.log(error);\n      });\n      window.location.reload();\n    };\n\n    this.handleCreatepost = event => {\n      console.log(\"Bye\");\n      this.setState({\n        createRequested: true\n      });\n    };\n\n    this.handleCreateLinkChange = event => {\n      this.setState({\n        createLink: event.target.value\n      });\n    };\n\n    this.handleCreateDescriptionChange = event => {\n      this.setState({\n        craeteDescription: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `JWT ${localStorage.getItem(\"token\")}`\n    };\n    const url = \"http://localhost:8000/api/posts?course=\" + this.props.match.params.id;\n    axios.get(url, {\n      headers\n    }).then(result => {\n      this.setState({\n        posts: result.data\n      });\n      console.log(result.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    //console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-success \",\n      onClick: this.handleCreatepost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, \"Create Post\"), this.state.createRequested ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control \",\n      id: \"link\",\n      placeholder: \"Link\",\n      type: \"text\",\n      name: \"link\",\n      onChange: this.handleCreateLinkChange,\n      autoFocus: true,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, \"Link\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control \",\n      id: \"description\",\n      placeholder: \"Description\",\n      type: \"text\",\n      name: \"description\",\n      onChange: this.handleCreateDescriptionChange,\n      autoFocus: true,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, \"Description\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }\n    }, \"Post \\xA0\\xA0\\xA0\")))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }), this.state.posts.length == 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 48\n      }\n    }, \"No Posts Yet\")) : this.state.posts.map(val => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \" container \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"posts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 19\n        }\n      }, \"Posted By:- \", val.created_by.full_name, \" - \", val.created_by.email), /*#__PURE__*/React.createElement(\"h6\", {\n        style: {\n          textAlign: 'left'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 19\n        }\n      }, \" Posted on : \", moment(val.created_at).format(\"dddd, MMMM Do YYYY, h:mm:ss a\"), \" \"), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 19\n        }\n      }, val.description), /*#__PURE__*/React.createElement(\"a\", {\n        target: \"_blank\",\n        href: val.link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 54\n        }\n      }, \" \", val.link)), /*#__PURE__*/React.createElement(\"button\", {\n        className: val.is_already_upvoted ? \"btn btn-success\" : \" btn btn-secondary\",\n        onClick: e => this.upvoteHandler(e, val.id, val.upvote_count),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 19\n        }\n      }, \"Upvote\"), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 19\n        }\n      }, \"Upvote-Count \", val.upvote_count)), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }\n      }));\n    })));\n  }\n\n}\nexport default Posts;","map":{"version":3,"sources":["/home/parth/Documents/Github/resourcified-frontend/src/pages/posts.js"],"names":["React","Component","axios","Link","Redirect","moment","Posts","state","upvote","upvoted","posts","createRequested","createLink","createDescription","handleSubmit","event","preventDefault","url","props","match","params","id","console","log","headers","Accept","Authorization","localStorage","getItem","link","description","bodyFormData","FormData","set","post","then","result","data","catch","error","window","location","reload","upvoteHandler","e","val","user","handleCreatepost","setState","handleCreateLinkChange","target","value","handleCreateDescriptionChange","craeteDescription","componentDidMount","get","render","length","map","created_by","full_name","email","textAlign","created_at","format","is_already_upvoted","upvote_count"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport moment from 'moment';\n\nexport class Posts extends Component {\n  state = {\n\n    upvote: 0,\n    upvoted: false,\n    posts: [],\n    createRequested: false,\n    createLink:\"\",\n    createDescription:\"\"\n  };\n\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const url=\"http://localhost:8000/api/posts?course=\"+this.props.match.params.id;\n    console.log(url);\n\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `JWT ${localStorage.getItem(\"token\")}`\n\n    };\n    const link = this.state.createLink;\n    const description = this.state.createDescription;\n    let bodyFormData = new FormData();\n    bodyFormData.set(\"link\",link);\n    bodyFormData.set(\"description\", description);\n\n    axios\n      .post(url, bodyFormData, { headers })\n      .then((result) => {\n\n\n        \n\n\n        console.log(result.data);\n      })\n      .catch((error) => {\n        console.log(error);\n\n      });\n\n    window.location.reload();\n\n  }\n\n  upvoteHandler = (e, id, val) => {\n\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `JWT ${localStorage.getItem(\"token\")}`\n\n    };\n    const url = \"http://localhost:8000/api/upvote\";\n    const user = localStorage.getItem(\"userid\");\n    const post = id;\n    let bodyFormData = new FormData();\n    bodyFormData.set(\"user\", user);\n    bodyFormData.set(\"post\", post);\n\n    console.log(user); console.log(post);\n    axios\n      .post(url, bodyFormData, { headers })\n      .then((result) => {\n\n\n        // this.setState({ posts: result.data });\n\n\n        console.log(result.data);\n      })\n      .catch((error) => {\n        console.log(error);\n\n      });\n\n    window.location.reload()\n\n  }\n\n  handleCreatepost = (event) => {\n    console.log(\"Bye\")\n    this.setState({ createRequested: true });\n  }\n\n  handleCreateLinkChange = (event) => {\n    this.setState({ createLink: event.target.value });\n  };\n  handleCreateDescriptionChange = (event) => {\n    this.setState({ craeteDescription: event.target.value });\n  };\n\n  componentDidMount() {\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `JWT ${localStorage.getItem(\"token\")}`\n\n    };\n    const url = \"http://localhost:8000/api/posts?course=\" + this.props.match.params.id;\n    axios\n      .get(url, { headers })\n      .then((result) => {\n\n\n        this.setState({ posts: result.data });\n\n\n        console.log(result.data);\n      })\n      .catch((error) => {\n        console.log(error);\n\n      });\n  }\n\n\n\n\n  render() {\n    //console.log(this.props);\n    return (\n      <div>\n\n        <div className=\"container\">\n          <button className=\"btn btn-outline-success \" onClick={ this.handleCreatepost}>Create Post</button>\n          \n          \n          {this.state.createRequested ?\n            <div>\n              <form onSubmit={this.handleSubmit}>\n                <div className=\"form-group\">\n                  <div className=\"form-label-group\">\n                    <input\n                      className={\n                        \"form-control \"\n                      }\n                      id=\"link\"\n                      placeholder=\"Link\"\n                      type=\"text\"\n                      name=\"link\"\n                      onChange={this.handleCreateLinkChange}\n                      autoFocus\n                      required\n                    />\n                    <label htmlFor=\"link\">Link</label>\n\n                  </div>\n\n                  <div className=\"form-label-group\">\n                    <input\n                      className={\n                        \"form-control \"\n                      }\n                      id=\"description\"\n                      placeholder=\"Description\"\n                      type=\"text\"\n                      name=\"description\"\n                      onChange={this.handleCreateDescriptionChange}\n                      autoFocus\n                      required\n                    />\n                    <label htmlFor=\"description\">Description</label>\n\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <button\n                    className=\"btn btn-primary btn-block\"\n                    type=\"submit\"\n\n                  >\n                    Post &nbsp;&nbsp;&nbsp;\n\n                  </button>\n                </div>\n              </form>\n            </div> : <div></div>}\n\n          <br></br>\n          <br></br>\n          {this.state.posts.length == 0 ? <div><h2>No Posts Yet</h2></div> : this.state.posts.map((val) => {\n\n            return (\n              <div className=\" container \">\n                <div className=\"posts\">\n\n                  <h4>Posted By:- {val.created_by.full_name} - {val.created_by.email}</h4>\n                  <h6 style={{ textAlign: 'left' }}> Posted on : {moment(val.created_at).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")} </h6>\n                  <h3>{val.description}</h3>\n\n                  <a target=\"_blank\" href={val.link}><h3> {val.link}</h3></a>\n\n\n                  <button className={val.is_already_upvoted ? \"btn btn-success\" : \" btn btn-secondary\"} onClick={(e) => this.upvoteHandler(e, val.id, val.upvote_count)}>Upvote</button>\n\n                  <h3>Upvote-Count {val.upvote_count}</h3>\n\n                </div>\n                <br></br>\n              </div>\n\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}