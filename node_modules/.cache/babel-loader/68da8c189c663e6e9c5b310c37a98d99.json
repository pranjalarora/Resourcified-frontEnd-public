{"ast":null,"code":"var _jsxFileName = \"/home/parth/Documents/Github/teacher-pal/src/pages/sidenav.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { BrowserRouter as Router, Route, Link, withRouter } from \"react-router-dom\";\nconst StyledSideNav = styled.div`   \n    position: fixed;     /* Fixed Sidebar (stay in place on scroll and position relative to viewport) */\n    height: 500px;\n    width: 150px;     /* Set the width of the sidebar */\n    z-index: 1;      /* Stay on top of everything */\n    top: 3.4em;      /* Stay at the top */\n    \n    background-color: #222; /* Black */\n    overflow-x: hidden;     /* Disable horizontal scroll */\n    padding-top: 200px;\n    padding-left: 20px;\n    font-size: 7px;\n    margin-top:30px;\n`;\n\nclass SideNav extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onItemClick = path => {\n      this.setState({\n        activePath: path\n      });\n    };\n\n    this.state = {\n      activePath: props.location.pathname,\n      items: [{\n        path: \"/quizshow/\" + localStorage.getItem('isbatch'),\n\n        /* path is used as id to check which NavItem is active basically */\n        name: ' Quiz',\n        key: 1\n        /* Key is required, else console throws error. Does this please you Mr. Browser?! */\n\n      }, {\n        path: \"/attendancedetail/\" + localStorage.getItem('isbatch'),\n        name: 'Attendance',\n        key: 2\n      }, {\n        path: \"/batchlist/\" + localStorage.getItem('isbatch'),\n        name: '  Students',\n        key: 3\n      }]\n    };\n  }\n\n  render() {\n    const {\n      items,\n      activePath\n    } = this.state;\n    return /*#__PURE__*/React.createElement(StyledSideNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, items.map(item => {\n      return /*#__PURE__*/React.createElement(NavItem, {\n        path: item.path,\n        name: item.name,\n        css: item.css,\n        onItemClick: this.onItemClick,\n        active: item.path === activePath,\n        key: item.key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      });\n    }));\n  }\n\n}\n\nconst RouterSideNav = withRouter(SideNav);\nconst StyledNavItem = styled.div`\n    height: 100px;\n    width: 105px; /* width must be same size as NavBar to center */\n    text-align: center; /* Aligns <a> inside of NavIcon div */\n    margin-bottom: 0;   /* Puts space between NavItems */\n    a {\n        font-size: 3em;\n        color: ${props => props.active ? \"white\" : \"#9FFFCB\"};\n        :hover {\n            opacity: 0.7;\n            text-decoration: none; /* Gets rid of underlining of icons */\n        }  \n    }\n`;\n\nclass NavItem extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      const {\n        path,\n        onItemClick\n      } = this.props;\n      onItemClick(path);\n    };\n  }\n\n  render() {\n    const {\n      active\n    } = this.props;\n    return /*#__PURE__*/React.createElement(StyledNavItem, {\n      active: active,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: this.props.path,\n      className: this.props.css,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, this.props.name)));\n  }\n\n}\n\nconst NavIcon = styled.div`\n`;\nexport default class Sidebar extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(RouterSideNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/parth/Documents/Github/teacher-pal/src/pages/sidenav.js"],"names":["React","styled","BrowserRouter","Router","Route","Link","withRouter","StyledSideNav","div","SideNav","Component","constructor","props","onItemClick","path","setState","activePath","state","location","pathname","items","localStorage","getItem","name","key","render","map","item","css","RouterSideNav","StyledNavItem","active","NavItem","handleClick","NavIcon","Sidebar"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { BrowserRouter as Router, Route, Link, withRouter } from \"react-router-dom\";\n\nconst StyledSideNav = styled.div`   \n    position: fixed;     /* Fixed Sidebar (stay in place on scroll and position relative to viewport) */\n    height: 500px;\n    width: 150px;     /* Set the width of the sidebar */\n    z-index: 1;      /* Stay on top of everything */\n    top: 3.4em;      /* Stay at the top */\n    \n    background-color: #222; /* Black */\n    overflow-x: hidden;     /* Disable horizontal scroll */\n    padding-top: 200px;\n    padding-left: 20px;\n    font-size: 7px;\n    margin-top:30px;\n`;\n\nclass SideNav extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activePath: props.location.pathname,\n            items: [\n                {\n                  path: \"/quizshow/\"+localStorage.getItem('isbatch'), /* path is used as id to check which NavItem is active basically */\n                  name: ' Quiz',\n                  \n                  key: 1 /* Key is required, else console throws error. Does this please you Mr. Browser?! */\n                },\n                {\n                  path: \"/attendancedetail/\"+localStorage.getItem('isbatch'),\n                  name: 'Attendance',\n                  \n                  key: 2\n                },\n                {\n                  path: \"/batchlist/\"+localStorage.getItem('isbatch'),\n                  name: '  Students',\n                  \n                  key: 3\n                },\n              ]\n        }\n    }\n\n    onItemClick = (path) => {\n        this.setState({ activePath: path });\n    }\n\n    render() {\n        const { items, activePath } = this.state;\n        return(\n            <StyledSideNav>\n                {\n                    items.map((item) => {\n                        return (\n                            <NavItem \n                                path={item.path}\n                                name={item.name}\n                                css={item.css}\n                                onItemClick={this.onItemClick}\n                                active={item.path === activePath}\n                                key={item.key}>\n                                    \n                                </NavItem>\n                            \n                        );\n                    })\n                }\n            </StyledSideNav>\n        );\n    }\n}\n\nconst RouterSideNav = withRouter(SideNav);\n\nconst StyledNavItem = styled.div`\n    height: 100px;\n    width: 105px; /* width must be same size as NavBar to center */\n    text-align: center; /* Aligns <a> inside of NavIcon div */\n    margin-bottom: 0;   /* Puts space between NavItems */\n    a {\n        font-size: 3em;\n        color: ${(props) => props.active ? \"white\" : \"#9FFFCB\"};\n        :hover {\n            opacity: 0.7;\n            text-decoration: none; /* Gets rid of underlining of icons */\n        }  \n    }\n`;\n\nclass NavItem extends React.Component {\n    handleClick = () => {\n        const { path, onItemClick } = this.props;\n        onItemClick(path);\n    }\n\n    render() {\n        const { active } = this.props;\n        return(\n            <StyledNavItem active={active}>\n                <Link to={this.props.path} className={this.props.css} onClick={this.handleClick}>\n                    <NavIcon>{this.props.name}</NavIcon>\n                </Link>\n            </StyledNavItem>\n        );\n    }\n}\n\nconst NavIcon = styled.div`\n`;\n\nexport default class Sidebar extends React.Component {\n    render() {\n        return (\n            <RouterSideNav></RouterSideNav>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}